<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xilium.CefGlue</name>
    </assembly>
    <members>
        <member name="M:Xilium.CefGlue.CefRuntime.Load">
            <summary>
            Loads CEF runtime.
            </summary>
            <exception cref="T:System.DllNotFoundException"></exception>
            <exception cref="T:Xilium.CefGlue.CefVersionMismatchException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.ExecuteProcess(Xilium.CefGlue.CefMainArgs,Xilium.CefGlue.CefApp)">
            <summary>
            This function should be called from the application entry point function to
            execute a secondary process. It can be used to run secondary processes from
            the browser client executable (default behavior) or from a separate
            executable specified by the CefSettings.browser_subprocess_path value. If
            called for the browser process (identified by no "type" command-line value)
            it will return immediately with a value of -1. If called for a recognized
            secondary process it will block until the process should exit and then return
            the process exit code. The |application| parameter may be empty.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.Initialize(Xilium.CefGlue.CefMainArgs,Xilium.CefGlue.CefSettings,Xilium.CefGlue.CefApp)">
            <summary>
            This function should be called on the main application thread to initialize
            the CEF browser process. The |application| parameter may be empty. A return
            value of true indicates that it succeeded and false indicates that it failed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.Shutdown">
            <summary>
            This function should be called on the main application thread to shut down
            the CEF browser process before the application exits.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.DoMessageLoopWork">
            <summary>
            Perform a single iteration of CEF message loop processing. This function is
            used to integrate the CEF message loop into an existing application message
            loop. Care must be taken to balance performance against excessive CPU usage.
            This function should only be called on the main application thread and only
            if CefInitialize() is called with a CefSettings.multi_threaded_message_loop
            value of false. This function will not block.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.RunMessageLoop">
            <summary>
            Run the CEF message loop. Use this function instead of an application-
            provided message loop to get the best balance between performance and CPU
            usage. This function should only be called on the main application thread and
            only if CefInitialize() is called with a
            CefSettings.multi_threaded_message_loop value of false. This function will
            block until a quit message is received by the system.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.QuitMessageLoop">
            <summary>
            Quit the CEF message loop that was started by calling CefRunMessageLoop().
            This function should only be called on the main application thread and only
            if CefRunMessageLoop() was used.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.SetOSModalLoop(System.Boolean)">
            <summary>
            Set to true before calling Windows APIs like TrackPopupMenu that enter a
            modal message loop. Set to false after exiting the modal message loop.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.CurrentlyOn(Xilium.CefGlue.CefThreadId)">
            <summary>
            CEF maintains multiple internal threads that are used for handling different
            types of tasks in different processes. See the cef_thread_id_t definitions in
            cef_types.h for more information. This function will return true if called on
            the specified thread. It is an error to request a thread from the wrong
            process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.PostTask(Xilium.CefGlue.CefThreadId,Xilium.CefGlue.CefTask)">
            <summary>
            Post a task for execution on the specified thread. This function may be
            called on any thread. It is an error to request a thread from the wrong
            process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.PostTask(Xilium.CefGlue.CefThreadId,Xilium.CefGlue.CefTask,System.Int64)">
            <summary>
            Post a task for delayed execution on the specified thread. This function may
            be called on any thread. It is an error to request a thread from the wrong
            process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.GetGeolocation(Xilium.CefGlue.CefGetGeolocationCallback)">
            <summary>
            Request a one-time geolocation update. This function bypasses any user
            permission checks so should only be used by code that is allowed to access
            location information.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.AddCrossOriginWhitelistEntry(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Add an entry to the cross-origin access whitelist.
            
             The same-origin policy restricts how scripts hosted from different origins
             (scheme + domain + port) can communicate. By default, scripts can only access
             resources with the same origin. Scripts hosted on the HTTP and HTTPS schemes
             (but no other schemes) can use the "Access-Control-Allow-Origin" header to
             allow cross-origin requests. For example, https://source.example.com can make
             XMLHttpRequest requests on http://target.example.com if the
             http://target.example.com request returns an "Access-Control-Allow-Origin:
             https://source.example.com" response header.
            
             Scripts in separate frames or iframes and hosted from the same protocol and
             domain suffix can execute cross-origin JavaScript if both pages set the
             document.domain value to the same domain suffix. For example,
             scheme://foo.example.com and scheme://bar.example.com can communicate using
             JavaScript if both domains set document.domain="example.com".
            
             This method is used to allow access to origins that would otherwise violate
             the same-origin policy. Scripts hosted underneath the fully qualified
             |source_origin| URL (like http://www.example.com) will be allowed access to
             all resources hosted on the specified |target_protocol| and |target_domain|.
             If |target_domain| is non-empty and |allow_target_subdomains| if false only
             exact domain matches will be allowed. If |target_domain| contains a top-
             level domain component (like "example.com") and |allow_target_subdomains| is
             true sub-domain matches will be allowed. If |target_domain| is empty and
             |allow_target_subdomains| if true all domains and IP addresses will be
             allowed.
            
             This method cannot be used to bypass the restrictions on local or display
             isolated schemes. See the comments on CefRegisterCustomScheme for more
             information.
            
             This function may be called on any thread. Returns false if |source_origin|
             is invalid or the whitelist cannot be accessed.
             </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.RemoveCrossOriginWhitelistEntry(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Remove an entry from the cross-origin access whitelist. Returns false if
            |source_origin| is invalid or the whitelist cannot be accessed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.ClearCrossOriginWhitelist">
            <summary>
            Remove all entries from the cross-origin access whitelist. Returns false if
            the whitelist cannot be accessed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.RegisterSchemeHandlerFactory(System.String,System.String,Xilium.CefGlue.CefSchemeHandlerFactory)">
            <summary>
            Register a scheme handler factory for the specified |scheme_name| and
            optional |domain_name|. An empty |domain_name| value for a standard scheme
            will cause the factory to match all domain names. The |domain_name| value
            will be ignored for non-standard schemes. If |scheme_name| is a built-in
            scheme and no handler is returned by |factory| then the built-in scheme
            handler factory will be called. If |scheme_name| is a custom scheme then
            also implement the CefApp::OnRegisterCustomSchemes() method in all processes.
            This function may be called multiple times to change or remove the factory
            that matches the specified |scheme_name| and optional |domain_name|.
            Returns false if an error occurs. This function may be called on any thread
            in the browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.ClearSchemeHandlerFactories">
            <summary>
            Clear all registered scheme handler factories. Returns false on error. This
            function may be called on any thread in the browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.RegisterExtension(System.String,System.String,Xilium.CefGlue.CefV8Handler)">
             <summary>
             Register a new V8 extension with the specified JavaScript extension code and
             handler. Functions implemented by the handler are prototyped using the
             keyword 'native'. The calling of a native function is restricted to the scope
             in which the prototype of the native function is defined. This function may
             only be called on the render process main thread.
            
             Example JavaScript extension code:
             <code>
               // create the 'example' global object if it doesn't already exist.
               if (!example)
                 example = {};
               // create the 'example.test' global object if it doesn't already exist.
               if (!example.test)
                 example.test = {};
               (function() {
                 // Define the function 'example.test.myfunction'.
                 example.test.myfunction = function() {
                   // Call CefV8Handler::Execute() with the function name 'MyFunction'
                   // and no arguments.
                   native function MyFunction();
                   return MyFunction();
                 };
                 // Define the getter function for parameter 'example.test.myparam'.
                 example.test.__defineGetter__('myparam', function() {
                   // Call CefV8Handler::Execute() with the function name 'GetMyParam'
                   // and no arguments.
                   native function GetMyParam();
                   return GetMyParam();
                 });
                 // Define the setter function for parameter 'example.test.myparam'.
                 example.test.__defineSetter__('myparam', function(b) {
                   // Call CefV8Handler::Execute() with the function name 'SetMyParam'
                   // and a single argument.
                   native function SetMyParam();
                   if(b) SetMyParam(b);
                 });
            
                 // Extension definitions can also contain normal JavaScript variables
                 // and functions.
                 var myint = 0;
                 example.test.increment = function() {
                   myint += 1;
                   return myint;
                 };
               })();
             </code>
             Example usage in the page:
             <code>
               // Call the function.
               example.test.myfunction();
               // Set the parameter.
               example.test.myparam = value;
               // Get the parameter.
               value = example.test.myparam;
               // Call another function.
               example.test.increment();
             </code>
             </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.VisitWebPluginInfo(Xilium.CefGlue.CefWebPluginInfoVisitor)">
            <summary>
            Visit web plugin information. Can be called on any thread in the browser
            process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.RefreshWebPlugins">
            <summary>
            Cause the plugin list to refresh the next time it is accessed regardless
            of whether it has already been loaded. Can be called on any thread in the
            browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.AddWebPluginPath(System.String)">
            <summary>
            Add a plugin path (directory + file). This change may not take affect until
            after CefRefreshWebPlugins() is called. Can be called on any thread in the
            browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.AddWebPluginDirectory(System.String)">
            <summary>
            Add a plugin directory. This change may not take affect until after
            CefRefreshWebPlugins() is called. Can be called on any thread in the browser
            process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.RemoveWebPluginPath(System.String)">
            <summary>
            Remove a plugin path (directory + file). This change may not take affect
            until after CefRefreshWebPlugins() is called. Can be called on any thread in
            the browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.UnregisterInternalWebPlugin(System.String)">
            <summary>
            Unregister an internal plugin. This may be undone the next time
            CefRefreshWebPlugins() is called. Can be called on any thread in the browser
            process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.ForceWebPluginShutdown(System.String)">
            <summary>
            Force a plugin to shutdown. Can be called on any thread in the browser
            process but will be executed on the IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.RegisterWebPluginCrash(System.String)">
            <summary>
            Register a plugin crash. Can be called on any thread in the browser process
            but will be executed on the IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.IsWebPluginUnstable(System.String,Xilium.CefGlue.CefWebPluginUnstableCallback)">
            <summary>
            Query if a plugin is unstable. Can be called on any thread in the browser
            process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.GetPath(Xilium.CefGlue.CefPathKey)">
            <summary>
            Retrieve the path associated with the specified |key|. Returns true on
            success. Can be called on any thread in the browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRuntime.LaunchProcess(Xilium.CefGlue.CefCommandLine)">
             <summary>
             Launches the process specified via |command_line|. Returns true upon
             success. Must be called on the browser process TID_PROCESS_LAUNCHER thread.
            
             Unix-specific notes:
             - All file descriptors open in the parent process will be closed in the
               child process except for stdin, stdout, and stderr.
             - If the first argument on the command line does not contain a slash,
               PATH will be searched. (See man execvp.)
             </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefAllowCertificateErrorCallback">
            <summary>
            Callback interface used for asynchronous continuation of url requests when
            invalid SSL certificates are encountered.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefAllowCertificateErrorCallback.Continue(System.Boolean)">
            <summary>
            Continue the url request. If |allow| is true the request will be
            continued. Otherwise, the request will be canceled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefApp.OnBeforeCommandLineProcessing(System.String,Xilium.CefGlue.CefCommandLine)">
            <summary>
            Provides an opportunity to view and/or modify command-line arguments before
            processing by CEF and Chromium. The |process_type| value will be empty for
            the browser process. Do not keep a reference to the CefCommandLine object
            passed to this method. The CefSettings.command_line_args_disabled value
            can be used to start with an empty command-line object. Any values
            specified in CefSettings that equate to command-line arguments will be set
            before this method is called. Be cautious when using this method to modify
            command-line arguments for non-browser processes as this may result in
            undefined behavior including crashes.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefApp.OnRegisterCustomSchemes(Xilium.CefGlue.CefSchemeRegistrar)">
            <summary>
            Provides an opportunity to register custom schemes. Do not keep a reference
            to the |registrar| object. This method is called on the main thread for
            each process and the registered schemes should be the same across all
            processes.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefApp.GetResourceBundleHandler">
            <summary>
            Return the handler for resource bundle events. If
            CefSettings.pack_loading_disabled is true a handler must be returned. If no
            handler is returned resources will be loaded from pack files. This method
            is called by the browser and renderer processes on multiple threads.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefApp.GetBrowserProcessHandler">
            <summary>
            Return the handler for functionality specific to the browser process. This
            method is called on multiple threads in the browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefApp.GetRenderProcessHandler">
            <summary>
            Return the handler for render process events. This method is called by the
            render process main thread.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xilium.CefGlue.CefAuthCallback">
            <summary>
            Callback interface used for asynchronous continuation of authentication
            requests.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefAuthCallback.Continue(System.String,System.String)">
            <summary>
            Continue the authentication request.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefAuthCallback.Cancel">
            <summary>
            Cancel the authentication request.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefBeforeDownloadCallback">
            <summary>
            Callback interface used to asynchronously continue a download.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBeforeDownloadCallback.Continue(System.String,System.Boolean)">
            <summary>
            Call to continue the download. Set |download_path| to the full file path
            for the download including the file name or leave blank to use the
            suggested name and the default temp directory. Set |show_dialog| to true
            if you do wish to show the default "Save As" dialog.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefBinaryValue">
            <summary>
            Class representing a binary value. Can be used on any process and thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBinaryValue.Create(System.Byte[])">
            <summary>
            Creates a new object that is not owned by any other object. The specified
            |data| will be copied.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBinaryValue.Copy">
            <summary>
            Returns a copy of this object. The data in this object will also be copied.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBinaryValue.GetData(System.Byte[],System.Int64,System.Int64)">
            <summary>
            Read up to |buffer_size| number of bytes into |buffer|. Reading begins at
            the specified byte |data_offset|. Returns the number of bytes read.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBinaryValue.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this
            method returns false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBinaryValue.IsOwned">
            <summary>
            Returns true if this object is currently owned by another object.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBinaryValue.Size">
            <summary>
            Returns the data size.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefBrowser">
            <summary>
            Class used to represent a browser window. When used in the browser process
            the methods of this class may be called on any thread unless otherwise
            indicated in the comments. When used in the render process the methods of
            this class may only be called on the main thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GetHost">
            <summary>
            Returns the browser host object. This method can only be called in the
            browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GoBack">
            <summary>
            Navigate backwards.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GoForward">
            <summary>
            Navigate forwards.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.Reload">
            <summary>
            Reload the current page.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.ReloadIgnoreCache">
            <summary>
            Reload the current page ignoring any cached data.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.StopLoad">
            <summary>
            Stop loading the page.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.IsSame(Xilium.CefGlue.CefBrowser)">
            <summary>
            Returns true if this object is pointing to the same handle as |that|
            object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GetMainFrame">
            <summary>
            Returns the main (top-level) frame for the browser window.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GetFocusedFrame">
            <summary>
            Returns the focused frame for the browser window.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GetFrame(System.Int64)">
            <summary>
            Returns the frame with the specified identifier, or NULL if not found.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GetFrame(System.String)">
            <summary>
            Returns the frame with the specified name, or NULL if not found.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GetFrameIdentifiers">
            <summary>
            Returns the identifiers of all existing frames.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.GetFrameNames">
            <summary>
            Returns the names of all existing frames.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowser.SendProcessMessage(Xilium.CefGlue.CefProcessId,Xilium.CefGlue.CefProcessMessage)">
            <summary>
            Send a message to the specified |target_process|. Returns true if the
            message was sent successfully.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowser.CanGoBack">
            <summary>
            Returns true if the browser can navigate backwards.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowser.CanGoForward">
            <summary>
            Returns true if the browser can navigate forwards.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowser.IsLoading">
            <summary>
            Returns true if the browser is currently loading.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowser.Identifier">
            <summary>
            Returns the globally unique identifier for this browser.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowser.IsPopup">
            <summary>
            Returns true if the window is a popup window.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowser.HasDocument">
            <summary>
            Returns true if a document has been loaded in the browser.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowser.FrameCount">
            <summary>
            Returns the number of frames that currently exist.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefBrowserHost">
            <summary>
            Class used to represent the browser process aspects of a browser window. The
            methods of this class can only be called in the browser process. They may be
            called on any thread in that process unless otherwise indicated in the
            comments.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.CreateBrowser(Xilium.CefGlue.CefWindowInfo,Xilium.CefGlue.CefClient,Xilium.CefGlue.CefBrowserSettings,System.String,Xilium.CefGlue.CefRequestContext)">
            <summary>
            Create a new browser window using the window parameters specified by
            |windowInfo|. All values will be copied internally and the actual window
            will be created on the UI thread. If |request_context| is empty the
            global request context will be used. This method can be called on any
            browser process thread and will not block.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.CreateBrowserSync(Xilium.CefGlue.CefWindowInfo,Xilium.CefGlue.CefClient,Xilium.CefGlue.CefBrowserSettings,System.String,Xilium.CefGlue.CefRequestContext)">
            <summary>
            Create a new browser window using the window parameters specified by
            |windowInfo|. If |request_context| is empty the global request context
            will be used. This method can only be called on the browser process UI
            thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetBrowser">
            <summary>
            Returns the hosted browser object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.ParentWindowWillClose">
            <summary>
            Call this method before destroying a contained browser window. This method
            performs any internal cleanup that may be needed before the browser window
            is destroyed. See CefLifeSpanHandler::DoClose() documentation for
            additional usage information.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.CloseBrowser(System.Boolean)">
            <summary>
            Request that the browser close. The JavaScript 'onbeforeunload' event will
            be fired. If |force_close| is false the event handler, if any, will be
            allowed to prompt the user and the user can optionally cancel the close.
            If |force_close| is true the prompt will not be displayed and the close
            will proceed. Results in a call to CefLifeSpanHandler::DoClose() if the
            event handler allows the close or if |force_close| is true. See
            CefLifeSpanHandler::DoClose() documentation for additional usage
            information.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SetFocus(System.Boolean)">
            <summary>
            Set focus for the browser window. If |enable| is true focus will be set to
            the window. Otherwise, focus will be removed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetWindowHandle">
            <summary>
            Retrieve the window handle for this browser.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetOpenerWindowHandle">
            <summary>
            Retrieve the window handle of the browser that opened this browser. Will
            return NULL for non-popup windows. This method can be used in combination
            with custom handling of modal windows.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetClient">
            <summary>
            Returns the client for this browser.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetRequestContext">
            <summary>
            Returns the request context for this browser.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetDevToolsUrl(System.Boolean)">
            <summary>
            Returns the DevTools URL for this browser. If |http_scheme| is true the
            returned URL will use the http scheme instead of the chrome-devtools
            scheme. Remote debugging can be enabled by specifying the
            "remote-debugging-port" command-line flag or by setting the
            CefSettings.remote_debugging_port value. If remote debugging is not enabled
            this method will return an empty string.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetZoomLevel">
            <summary>
            Get the current zoom level. The default zoom level is 0.0. This method can
            only be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SetZoomLevel(System.Double)">
            <summary>
            Change the zoom level to the specified value. Specify 0.0 to reset the
            zoom level. If called on the UI thread the change will be applied
            immediately. Otherwise, the change will be applied asynchronously on the
            UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.RunFileDialog(Xilium.CefGlue.CefFileDialogMode,System.String,System.String,System.String[],Xilium.CefGlue.CefRunFileDialogCallback)">
            <summary>
            Call to run a file chooser dialog. Only a single file chooser dialog may be
            pending at any given time. |mode| represents the type of dialog to display.
            |title| to the title to be used for the dialog and may be empty to show the
            default title ("Open" or "Save" depending on the mode). |default_file_name|
            is the default file name to select in the dialog. |accept_types| is a list
            of valid lower-cased MIME types or file extensions specified in an input
            element and is used to restrict selectable files to such types. |callback|
            will be executed after the dialog is dismissed or immediately if another
            dialog is already pending. The dialog will be initiated asynchronously on
            the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.StartDownload(System.String)">
            <summary>
            Download the file at |url| using CefDownloadHandler.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.Print">
            <summary>
            Print the current browser contents.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.Find(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Search for |searchText|. |identifier| can be used to have multiple searches
            running simultaniously. |forward| indicates whether to search forward or
            backward within the page. |matchCase| indicates whether the search should
            be case-sensitive. |findNext| indicates whether this is the first request
            or a follow-up.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.StopFinding(System.Boolean)">
            <summary>
            Cancel all searches that are currently going on.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SetMouseCursorChangeDisabled(System.Boolean)">
            <summary>
            Set whether mouse cursor change is disabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.WasResized">
            <summary>
            Notify the browser that the widget has been resized. The browser will first
            call CefRenderHandler::GetViewRect to get the new size and then call
            CefRenderHandler::OnPaint asynchronously with the updated regions. This
            method is only used when window rendering is disabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.WasHidden(System.Boolean)">
            <summary>
            Notify the browser that it has been hidden or shown. Layouting and
            CefRenderHandler::OnPaint notification will stop when the browser is
            hidden. This method is only used when window rendering is disabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.NotifyScreenInfoChanged">
            <summary>
            Send a notification to the browser that the screen info has changed. The
            browser will then call CefRenderHandler::GetScreenInfo to update the
            screen information with the new values. This simulates moving the webview
            window from one display to another, or changing the properties of the
            current display. This method is only used when window rendering is
            disabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.Invalidate(Xilium.CefGlue.CefRectangle,Xilium.CefGlue.CefPaintElementType)">
            <summary>
            Invalidate the |dirtyRect| region of the view. The browser will call
            CefRenderHandler::OnPaint asynchronously with the updated regions. This
            method is only used when window rendering is disabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SendKeyEvent(Xilium.CefGlue.CefKeyEvent)">
            <summary>
            Send a key event to the browser.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SendMouseClickEvent(Xilium.CefGlue.CefMouseEvent,Xilium.CefGlue.CefMouseButtonType,System.Boolean,System.Int32)">
            <summary>
            Send a mouse click event to the browser. The |x| and |y| coordinates are
            relative to the upper-left corner of the view.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SendMouseMoveEvent(Xilium.CefGlue.CefMouseEvent,System.Boolean)">
            <summary>
            Send a mouse move event to the browser. The |x| and |y| coordinates are
            relative to the upper-left corner of the view.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SendMouseWheelEvent(Xilium.CefGlue.CefMouseEvent,System.Int32,System.Int32)">
            <summary>
            Send a mouse wheel event to the browser. The |x| and |y| coordinates are
            relative to the upper-left corner of the view. The |deltaX| and |deltaY|
            values represent the movement delta in the X and Y directions respectively.
            In order to scroll inside select popups with window rendering disabled
            CefRenderHandler::GetScreenPoint should be implemented properly.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SendFocusEvent(System.Boolean)">
            <summary>
            Send a focus event to the browser.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.SendCaptureLostEvent">
            <summary>
            Send a capture lost event to the browser.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.GetNSTextInputContext">
            <summary>
            Get the NSTextInputContext implementation for enabling IME on Mac when
            window rendering is disabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.HandleKeyEventBeforeTextInputClient(System.IntPtr)">
            <summary>
            Handles a keyDown event prior to passing it through the NSTextInputClient
            machinery.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserHost.HandleKeyEventAfterTextInputClient(System.IntPtr)">
            <summary>
            Performs any additional actions after NSTextInputClient handles the event.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserHost.IsMouseCursorChangeDisabled">
            <summary>
            Returns true if mouse cursor change is disabled.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserHost.IsWindowRenderingDisabled">
            <summary>
            Returns true if window rendering is disabled.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefBrowserProcessHandler">
            <summary>
            Class used to implement browser process callbacks. The methods of this class
            will be called on the browser process main thread unless otherwise indicated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserProcessHandler.OnContextInitialized">
            <summary>
            Called on the browser process UI thread immediately after the CEF context
            has been initialized.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserProcessHandler.OnBeforeChildProcessLaunch(Xilium.CefGlue.CefCommandLine)">
            <summary>
            Called before a child process is launched. Will be called on the browser
            process UI thread when launching a render process and on the browser
            process IO thread when launching a GPU or plugin process. Provides an
            opportunity to modify the child process command line. Do not keep a
            reference to |command_line| outside of this method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefBrowserProcessHandler.OnRenderProcessThreadCreated(Xilium.CefGlue.CefListValue)">
            <summary>
            Called on the browser process IO thread after the main thread has been
            created for a new render process. Provides an opportunity to specify extra
            information that will be passed to
            CefRenderProcessHandler::OnRenderThreadCreated() in the render process. Do
            not keep a reference to |extra_info| outside of this method.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefCallback">
            <summary>
            Generic callback interface used for asynchronous continuation.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCallback.Continue">
            <summary>
            Continue processing.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCallback.Cancel">
            <summary>
            Cancel processing.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetContextMenuHandler">
            <summary>
            Return the handler for context menus. If no handler is provided the default
            implementation will be used.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetDialogHandler">
            <summary>
            Return the handler for dialogs. If no handler is provided the default
            implementation will be used.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetDisplayHandler">
            <summary>
            Return the handler for browser display state events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetDownloadHandler">
            <summary>
            Return the handler for download events. If no handler is returned downloads
            will not be allowed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetDragHandler">
            <summary>
            Return the handler for drag events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetFocusHandler">
            <summary>
            Return the handler for focus events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetGeolocationHandler">
            <summary>
            Return the handler for geolocation permissions requests. If no handler is
            provided geolocation access will be denied by default.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetJSDialogHandler">
            <summary>
            Return the handler for JavaScript dialogs. If no handler is provided the
            default implementation will be used.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetKeyboardHandler">
            <summary>
            Return the handler for keyboard events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetLifeSpanHandler">
            <summary>
            Return the handler for browser life span events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetLoadHandler">
            <summary>
            Return the handler for browser load status events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetRenderHandler">
            <summary>
            Return the handler for off-screen rendering events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.GetRequestHandler">
            <summary>
            Return the handler for browser request events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefClient.OnProcessMessageReceived(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefProcessId,Xilium.CefGlue.CefProcessMessage)">
            <summary>
            Called when a new message is received from a different process. Return true
            if the message was handled or false otherwise. Do not keep a reference to
            or attempt to access the message outside of this callback.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefCommandLine">
            <summary>
            Class used to create and/or parse command line arguments. Arguments with
            '--', '-' and, on Windows, '/' prefixes are considered switches. Switches
            will always precede any arguments without switch prefixes. Switches can
            optionally have a value specified using the '=' delimiter (e.g.
            "-switch=value"). An argument of "--" will terminate switch parsing with all
            subsequent tokens, regardless of prefix, being interpreted as non-switch
            arguments. Switch names are considered case-insensitive. This class can be
            used before CefInitialize() is called.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.Create">
            <summary>
            Create a new CefCommandLine instance.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.Copy">
            <summary>
            Returns a writable copy of this object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.Reset">
            <summary>
            Reset the command-line switches and arguments but leave the program
            component unchanged.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.GetArgv">
            <summary>
            Retrieve the original command line string as a vector of strings.
            The argv array: { program, [(--|-|/)switch[=value]]*, [--], [argument]* }
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.ToString">
            <summary>
            Constructs and returns the represented command line string. Use this method
            cautiously because quoting behavior is unclear.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.GetProgram">
            <summary>
            Get the program part of the command line string (the first item).
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.SetProgram(System.String)">
            <summary>
            Set the program part of the command line string (the first item).
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.HasSwitch(System.String)">
            <summary>
            Returns true if the command line contains the given switch.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.GetSwitchValue(System.String)">
            <summary>
            Returns the value associated with the given switch. If the switch has no
            value or isn't present this method returns the empty string.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.GetSwitches">
            <summary>
            Returns the map of switch names and values. If a switch has no value an
            empty string is returned.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.AppendSwitch(System.String)">
            <summary>
            Add a switch to the end of the command line. If the switch has no value
            pass an empty value string.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.AppendSwitch(System.String,System.String)">
            <summary>
            Add a switch with the specified value to the end of the command line.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.GetArguments">
            <summary>
            Get the remaining command line arguments.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.AppendArgument(System.String)">
            <summary>
            Add an argument to the end of the command line.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.PrependWrapper(System.String)">
            <summary>
            Insert a command before the current command.
            Common for debuggers, like "valgrind" or "gdb --args".
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCommandLine.PrependArgument(System.String)">
            <summary>
            Insert an argument to the beginning of the command line.
            Unlike PrependWrapper this method doesn't strip argument by spaces.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefCommandLine.Global">
            <summary>
            Returns the singleton global CefCommandLine object. The returned object
            will be read-only.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefCommandLine.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this
            function returns false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefCommandLine.IsReadOnly">
            <summary>
            Returns true if the values of this object are read-only. Some APIs may
            expose read-only objects.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefCommandLine.HasSwitches">
            <summary>
            Returns true if the command line has switches.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefCommandLine.HasArguments">
            <summary>
            True if there are remaining command line arguments.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefCompletionHandler">
            <summary>
            Generic callback interface used for asynchronous completion.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCompletionHandler.OnComplete">
            <summary>
            Method that will be called once the task is complete.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefContextMenuHandler">
            <summary>
            Implement this interface to handle context menu events. The methods of this
            class will be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefContextMenuHandler.OnBeforeContextMenu(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefContextMenuParams,Xilium.CefGlue.CefMenuModel)">
            <summary>
            Called before a context menu is displayed. |params| provides information
            about the context menu state. |model| initially contains the default
            context menu. The |model| can be cleared to show no context menu or
            modified to show a custom menu. Do not keep references to |params| or
            |model| outside of this callback.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefContextMenuHandler.OnContextMenuCommand(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefContextMenuParams,System.Int32,Xilium.CefGlue.CefEventFlags)">
            <summary>
            Called to execute a command selected from the context menu. Return true if
            the command was handled or false for the default implementation. See
            cef_menu_id_t for the command ids that have default implementations. All
            user-defined command ids should be between MENU_ID_USER_FIRST and
            MENU_ID_USER_LAST. |params| will have the same values as what was passed to
            OnBeforeContextMenu(). Do not keep a reference to |params| outside of this
            callback.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefContextMenuHandler.OnContextMenuDismissed(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame)">
            <summary>
            Called when the context menu is dismissed irregardless of whether the menu
            was empty or a command was selected.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefContextMenuParams">
            <summary>
            Provides information about the context menu state. The ethods of this class
            can only be accessed on browser process the UI thread.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.X">
            <summary>
            Returns the X coordinate of the mouse where the context menu was invoked.
            Coords are relative to the associated RenderView's origin.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.Y">
            <summary>
            Returns the Y coordinate of the mouse where the context menu was invoked.
            Coords are relative to the associated RenderView's origin.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.ContextMenuType">
            <summary>
            Returns flags representing the type of node that the context menu was
            invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.LinkUrl">
            <summary>
            Returns the URL of the link, if any, that encloses the node that the
            context menu was invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.UnfilteredLinkUrl">
            <summary>
            Returns the link URL, if any, to be used ONLY for "copy link address". We
            don't validate this field in the frontend process.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.SourceUrl">
            <summary>
            Returns the source URL, if any, for the element that the context menu was
            invoked on. Example of elements with source URLs are img, audio, and video.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.HasImageContents">
            <summary>
            Returns true if the context menu was invoked on an image which has
            non-empty contents.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.PageUrl">
            <summary>
            Returns the URL of the top level page that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.FrameUrl">
            <summary>
            Returns the URL of the subframe that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.FrameCharset">
            <summary>
            Returns the character encoding of the subframe that the context menu was
            invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.MediaType">
            <summary>
            Returns the type of context node that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.MediaState">
            <summary>
            Returns flags representing the actions supported by the media element, if
            any, that the context menu was invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.SelectionText">
            <summary>
            Returns the text of the selection, if any, that the context menu was
            invoked on.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.IsEditable">
            <summary>
            Returns true if the context menu was invoked on an editable node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.IsSpeechInputEnabled">
            <summary>
            Returns true if the context menu was invoked on an editable node where
            speech-input is enabled.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefContextMenuParams.EditState">
            <summary>
            Returns flags representing the actions supported by the editable node, if
            any, that the context menu was invoked on.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefCookieManager">
            <summary>
            Class used for managing cookies. The methods of this class may be called on
            any thread unless otherwise indicated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.Create(System.String,System.Boolean)">
            <summary>
            Creates a new cookie manager. If |path| is empty data will be stored in
            memory only. Otherwise, data will be stored at the specified |path|. To
            persist session cookies (cookies without an expiry date or validity
            interval) set |persist_session_cookies| to true. Session cookies are
            generally intended to be transient and most Web browsers do not persist
            them. Returns NULL if creation fails.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.SetSupportedSchemes(System.String[])">
            <summary>
            Set the schemes supported by this manager. By default only "http" and
            "https" schemes are supported. Must be called before any cookies are
            accessed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.VisitAllCookies(Xilium.CefGlue.CefCookieVisitor)">
            <summary>
            Visit all cookies. The returned cookies are ordered by longest path, then
            by earliest creation date. Returns false if cookies cannot be accessed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.VisitUrlCookies(System.String,System.Boolean,Xilium.CefGlue.CefCookieVisitor)">
            <summary>
            Visit a subset of cookies. The results are filtered by the given url
            scheme, host, domain and path. If |includeHttpOnly| is true HTTP-only
            cookies will also be included in the results. The returned cookies are
            ordered by longest path, then by earliest creation date. Returns false if
            cookies cannot be accessed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.SetCookie(System.String,Xilium.CefGlue.CefCookie)">
            <summary>
            Sets a cookie given a valid URL and explicit user-provided cookie
            attributes. This function expects each attribute to be well-formed. It will
            check for disallowed characters (e.g. the ';' character is disallowed
            within the cookie value attribute) and will return false without setting
            the cookie if such characters are found. This method must be called on the
            IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.DeleteCookies(System.String,System.String)">
            <summary>
            Delete all cookies that match the specified parameters. If both |url| and
            values |cookie_name| are specified all host and domain cookies matching
            both will be deleted. If only |url| is specified all host cookies (but not
            domain cookies) irrespective of path will be deleted. If |url| is empty all
            cookies for all hosts and domains will be deleted. Returns false if a non-
            empty invalid URL is specified or if cookies cannot be accessed. This
            method must be called on the IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.SetStoragePath(System.String,System.Boolean)">
            <summary>
            Sets the directory path that will be used for storing cookie data. If
            |path| is empty data will be stored in memory only. Otherwise, data will be
            stored at the specified |path|. To persist session cookies (cookies without
            an expiry date or validity interval) set |persist_session_cookies| to true.
            Session cookies are generally intended to be transient and most Web browsers
            do not persist them. Returns false if cookies cannot be accessed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieManager.FlushStore(Xilium.CefGlue.CefCompletionHandler)">
            <summary>
            Flush the backing store (if any) to disk and execute the specified
            |handler| on the IO thread when done. Returns false if cookies cannot be
            accessed.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefCookieManager.Global">
            <summary>
            Returns the global cookie manager. By default data will be stored at
            CefSettings.cache_path if specified or in memory otherwise.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefCookieVisitor">
            <summary>
            Interface to implement for visiting cookie values. The methods of this class
            will always be called on the IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefCookieVisitor.Visit(Xilium.CefGlue.CefCookie,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Method that will be called once for each cookie. |count| is the 0-based
            index for the current cookie. |total| is the total number of cookies.
            Set |deleteCookie| to true to delete the cookie currently being visited.
            Return false to stop visiting cookies. This method may never be called if
            no cookies are found.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDialogHandler">
            <summary>
            Implement this interface to handle dialog events. The methods of this class
            will be called on the browser process UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDialogHandler.OnFileDialog(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFileDialogMode,System.String,System.String,System.String[],Xilium.CefGlue.CefFileDialogCallback)">
            <summary>
            Called to run a file chooser dialog. |mode| represents the type of dialog
            to display. |title| to the title to be used for the dialog and may be empty
            to show the default title ("Open" or "Save" depending on the mode).
            |default_file_name| is the default file name to select in the dialog.
            |accept_types| is a list of valid lower-cased MIME types or file extensions
            specified in an input element and is used to restrict selectable files to
            such types. To display a custom dialog return true and execute |callback|
            either inline or at a later time. To display the default dialog return
            false.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDictionaryValue">
            <summary>
            Class representing a dictionary value. Can be used on any process and thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.Create">
            <summary>
            Creates a new object that is not owned by any other object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.Copy(System.Boolean)">
            <summary>
            Returns a writable copy of this object. If |exclude_empty_children| is true
            any empty dictionaries or lists will be excluded from the copy.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.Clear">
            <summary>
            Removes all values. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.HasKey(System.String)">
            <summary>
            Returns true if the current dictionary has a value for the given key.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetKeys">
            <summary>
            Reads all keys for this dictionary into the specified vector.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.Remove(System.String)">
            <summary>
            Removes the value at the specified key. Returns true is the value was
            removed successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetKeyType(System.String)">
            <summary>
            Returns the value type for the specified key.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetBool(System.String)">
            <summary>
            Returns the value at the specified key as type bool.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetInt(System.String)">
            <summary>
            Returns the value at the specified key as type int.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetDouble(System.String)">
            <summary>
            Returns the value at the specified key as type double.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetString(System.String)">
            <summary>
            Returns the value at the specified key as type string.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetBinary(System.String)">
            <summary>
            Returns the value at the specified key as type binary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetDictionary(System.String)">
            <summary>
            Returns the value at the specified key as type dictionary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.GetList(System.String)">
            <summary>
            Returns the value at the specified key as type list.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetNull(System.String)">
            <summary>
            Sets the value at the specified key as type null. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetBool(System.String,System.Boolean)">
            <summary>
            Sets the value at the specified key as type bool. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetInt(System.String,System.Int32)">
            <summary>
            Sets the value at the specified key as type int. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetDouble(System.String,System.Double)">
            <summary>
            Sets the value at the specified key as type double. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetString(System.String,System.String)">
            <summary>
            Sets the value at the specified key as type string. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetBinary(System.String,Xilium.CefGlue.CefBinaryValue)">
            <summary>
            Sets the value at the specified key as type binary. Returns true if the
            value was set successfully. If |value| is currently owned by another object
            then the value will be copied and the |value| reference will not change.
            Otherwise, ownership will be transferred to this object and the |value|
            reference will be invalidated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetDictionary(System.String,Xilium.CefGlue.CefDictionaryValue)">
            <summary>
            Sets the value at the specified key as type dict. Returns true if the
            value was set successfully. After calling this method the |value| object
            will no longer be valid. If |value| is currently owned by another object
            then the value will be copied and the |value| reference will not change.
            Otherwise, ownership will be transferred to this object and the |value|
            reference will be invalidated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDictionaryValue.SetList(System.String,Xilium.CefGlue.CefListValue)">
            <summary>
            Sets the value at the specified key as type list. Returns true if the
            value was set successfully. After calling this method the |value| object
            will no longer be valid. If |value| is currently owned by another object
            then the value will be copied and the |value| reference will not change.
            Otherwise, ownership will be transferred to this object and the |value|
            reference will be invalidated.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDictionaryValue.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this
            method returns false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDictionaryValue.IsOwned">
            <summary>
            Returns true if this object is currently owned by another object.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDictionaryValue.IsReadOnly">
            <summary>
            Returns true if the values of this object are read-only. Some APIs may
            expose read-only objects.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDictionaryValue.Count">
            <summary>
            Returns the number of values.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDisplayHandler">
            <summary>
            Implement this interface to handle events related to browser display state.
            The methods of this class will be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDisplayHandler.OnAddressChange(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,System.String)">
            <summary>
            Called when a frame's address has changed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDisplayHandler.OnTitleChange(Xilium.CefGlue.CefBrowser,System.String)">
            <summary>
            Called when the page title changes.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDisplayHandler.OnTooltip(Xilium.CefGlue.CefBrowser,System.String)">
            <summary>
            Called when the browser is about to display a tooltip. |text| contains the
            text that will be displayed in the tooltip. To handle the display of the
            tooltip yourself return true. Otherwise, you can optionally modify |text|
            and then return false to allow the browser to display the tooltip.
            When window rendering is disabled the application is responsible for
            drawing tooltips and the return value is ignored.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDisplayHandler.OnStatusMessage(Xilium.CefGlue.CefBrowser,System.String)">
            <summary>
            Called when the browser receives a status message. |text| contains the text
            that will be displayed in the status message and |type| indicates the
            status message type.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDisplayHandler.OnConsoleMessage(Xilium.CefGlue.CefBrowser,System.String,System.String,System.Int32)">
            <summary>
            Called to display a console message. Return true to stop the message from
            being output to the console.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomDocument">
            <summary>
            Class used to represent a DOM document. The methods of this class should only
            be called on the render process main thread thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomDocument.GetElementById(System.String)">
            <summary>
            Returns the document element with the specified ID value.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomDocument.GetCompleteUrl(System.String)">
            <summary>
            Returns a complete URL based on the document base URL and the specified
            partial URL.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.DocumentType">
            <summary>
            Returns the document type.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.Root">
            <summary>
            Returns the root document node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.Body">
            <summary>
            Returns the BODY node of an HTML document.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.Head">
            <summary>
            Returns the HEAD node of an HTML document.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.Title">
            <summary>
            Returns the title of an HTML document.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.FocusedNode">
            <summary>
            Returns the node that currently has keyboard focus.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.HasSelection">
            <summary>
            Returns true if a portion of the document is selected.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.SelectionStartNode">
            <summary>
            Returns the selection start node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.SelectionStartOffset">
            <summary>
            Returns the selection offset within the start node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.SelectionEndNode">
            <summary>
            Returns the selection end node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.GetSelectionEndOffset">
            <summary>
            Returns the selection offset within the end node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.SelectionAsMarkup">
            <summary>
            Returns the contents of this selection as markup.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.GetSelectionAsText">
            <summary>
            Returns the contents of this selection as text.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomDocument.BaseUrl">
            <summary>
            Returns the base URL for the document.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomEvent">
            <summary>
            Class used to represent a DOM event. The methods of this class should only
            be called on the render process main thread.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.EventType">
            <summary>
            Returns the event type.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.Category">
            <summary>
            Returns the event category.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.Phase">
            <summary>
            Returns the event processing phase.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.CanBubble">
            <summary>
            Returns true if the event can bubble up the tree.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.CanCancel">
            <summary>
            Returns true if the event can be canceled.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.Document">
            <summary>
            Returns the document associated with this event.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.Target">
            <summary>
            Returns the target of the event.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomEvent.CurrentTarget">
            <summary>
            Returns the current target of the event.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomEventListener">
            <summary>
            Interface to implement for handling DOM events. The methods of this class
            will be called on the render process main thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomEventListener.HandleEvent(Xilium.CefGlue.CefDomEvent)">
            <summary>
            Called when an event is received. The event object passed to this method
            contains a snapshot of the DOM at the time this method is executed. DOM
            objects are only valid for the scope of this method. Do not keep references
            to or attempt to access any DOM objects outside the scope of this method.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomNode">
            <summary>
            Class used to represent a DOM node. The methods of this class should only be
            called on the render process main thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.IsSame(Xilium.CefGlue.CefDomNode)">
            <summary>
            Returns true if this object is pointing to the same handle as |that|
            object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.SetValue(System.String)">
            <summary>
            Set the value of this node. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.GetAsMarkup">
            <summary>
            Returns the contents of this node as markup.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.AddEventListener(System.String,Xilium.CefGlue.CefDomEventListener,System.Boolean)">
            <summary>
            Add an event listener to this node for the specified event type. If
            |useCapture| is true then this listener will be considered a capturing
            listener. Capturing listeners will recieve all events of the specified
            type before the events are dispatched to any other event targets beneath
            the current node in the tree. Events which are bubbling upwards through
            the tree will not trigger a capturing listener. Separate calls to this
            method can be used to register the same listener with and without capture.
            See WebCore/dom/EventNames.h for the list of supported event types.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.HasAttribute(System.String)">
            <summary>
            Returns true if this element has an attribute named |attrName|.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.GetAttribute(System.String)">
            <summary>
            Returns the element attribute named |attrName|.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.GetAttributes">
            <summary>
            Returns a map of all element attributes.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomNode.SetAttribute(System.String,System.String)">
            <summary>
            Set the value for the element attribute named |attrName|. Returns true on
            success.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.NodeType">
            <summary>
            Returns the type for this node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.IsText">
            <summary>
            Returns true if this is a text node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.IsElement">
            <summary>
            Returns true if this is an element node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.IsEditable">
            <summary>
            Returns true if this is an editable node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.IsFormControlElement">
            <summary>
            Returns true if this is a form control element node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.FormControlElementType">
            <summary>
            Returns the type of this form control element node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.Name">
            <summary>
            Returns the name of this node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.Value">
            <summary>
            Returns the value of this node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.Document">
            <summary>
            Returns the document associated with this node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.Parent">
            <summary>
            Returns the parent node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.PreviousSibling">
            <summary>
            Returns the previous sibling node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.NextSibling">
            <summary>
            Returns the next sibling node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.HasChildren">
            <summary>
            Returns true if this node has child nodes.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.FirstChild">
            <summary>
            Return the first child node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.LastChild">
            <summary>
            Returns the last child node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.ElementTagName">
            <summary>
            The following methods are valid only for element nodes.
            Returns the tag name of this element.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.HasAttributes">
            <summary>
            Returns true if this element has attributes.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDomNode.InnerText">
            <summary>
            Returns the inner text of the element.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomVisitor">
            <summary>
            Interface to implement for visiting the DOM. The methods of this class will
            be called on the render process main thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDomVisitor.Visit(Xilium.CefGlue.CefDomDocument)">
            <summary>
            Method executed for visiting the DOM. The document object passed to this
            method represents a snapshot of the DOM at the time this method is
            executed. DOM objects are only valid for the scope of this method. Do not
            keep references to or attempt to access any DOM objects outside the scope
            of this method.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDownloadHandler">
            <summary>
            Class used to handle file downloads. The methods of this class will called
            on the browser process UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDownloadHandler.OnBeforeDownload(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefDownloadItem,System.String,Xilium.CefGlue.CefBeforeDownloadCallback)">
            <summary>
            Called before a download begins. |suggested_name| is the suggested name for
            the download file. By default the download will be canceled. Execute
            |callback| either asynchronously or in this method to continue the download
            if desired. Do not keep a reference to |download_item| outside of this
            method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDownloadHandler.OnDownloadUpdated(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefDownloadItem,Xilium.CefGlue.CefDownloadItemCallback)">
            <summary>
            Called when a download's status or progress information has been updated.
            This may be called multiple times before and after OnBeforeDownload().
            Execute |callback| either asynchronously or in this method to cancel the
            download if desired. Do not keep a reference to |download_item| outside of
            this method.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDownloadItem">
            <summary>
            Class used to represent a download item.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this
            function returns false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.IsInProgress">
            <summary>
            Returns true if the download is in progress.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.IsComplete">
            <summary>
            Returns true if the download is complete.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.IsCanceled">
            <summary>
            Returns true if the download has been canceled or interrupted.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.CurrentSpeed">
            <summary>
            Returns a simple speed estimate in bytes/s.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.PercentComplete">
            <summary>
            Returns the rough percent complete or -1 if the receive total size is
            unknown.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.TotalBytes">
            <summary>
            Returns the total number of bytes.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.ReceivedBytes">
            <summary>
            Returns the number of received bytes.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.StartTime">
            <summary>
            Returns the time that the download started.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.EndTime">
            <summary>
            Returns the time that the download ended.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.FullPath">
            <summary>
            Returns the full path to the downloaded or downloading file.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.Id">
            <summary>
            Returns the unique identifier for this download.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.Url">
            <summary>
            Returns the URL.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.SuggestedFileName">
            <summary>
            Returns the suggested file name.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.ContentDisposition">
            <summary>
            Returns the content disposition.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDownloadItem.MimeType">
            <summary>
            Returns the mime type.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDownloadItemCallback">
            <summary>
            Callback interface used to asynchronously cancel a download.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDownloadItemCallback.Cancel">
            <summary>
            Call to cancel the download.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDragData">
            <summary>
            Class used to represent drag data. The methods of this class may be called
            on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDragData.GetFileNames">
            <summary>
            Retrieve the list of file names that are being dragged into the browser
            window.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.IsLink">
            <summary>
            Returns true if the drag data is a link.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.IsFragment">
            <summary>
            Returns true if the drag data is a text or html fragment.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.IsFile">
            <summary>
            Returns true if the drag data is a file.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.LinkUrl">
            <summary>
            Return the link URL that is being dragged.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.LinkTitle">
            <summary>
            Return the title associated with the link being dragged.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.LinkMetadata">
            <summary>
            Return the metadata, if any, associated with the link being dragged.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.FragmentText">
            <summary>
            Return the plain text fragment that is being dragged.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.FragmentHtml">
            <summary>
            Return the text/html fragment that is being dragged.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.FragmentBaseUrl">
            <summary>
            Return the base URL that the fragment came from. This value is used for
            resolving relative URLs and may be empty.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefDragData.FileName">
            <summary>
            Return the name of the file being dragged out of the browser window.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDragHandler">
            <summary>
            Implement this interface to handle events related to dragging. The methods of
            this class will be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefDragHandler.OnDragEnter(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefDragData,Xilium.CefGlue.CefDragOperationsMask)">
            <summary>
            Called when an external drag event enters the browser window. |dragData|
            contains the drag event data and |mask| represents the type of drag
            operation. Return false for default drag handling behavior or true to
            cancel the drag event.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefFileDialogCallback">
            <summary>
            Callback interface for asynchronous continuation of file dialog requests.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFileDialogCallback.Continue(System.String[])">
            <summary>
            Continue the file selection with the specified |file_paths|. This may be
            a single value or a list of values depending on the dialog mode. An empty
            value is treated the same as calling Cancel().
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFileDialogCallback.Cancel">
            <summary>
            Cancel the file selection.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefFocusHandler">
            <summary>
            Implement this interface to handle events related to focus. The methods of
            this class will be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFocusHandler.OnTakeFocus(Xilium.CefGlue.CefBrowser,System.Boolean)">
            <summary>
            Called when the browser component is about to loose focus. For instance, if
            focus was on the last HTML element and the user pressed the TAB key. |next|
            will be true if the browser is giving focus to the next component and false
            if the browser is giving focus to the previous component.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFocusHandler.OnSetFocus(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFocusSource)">
            <summary>
            Called when the browser component is requesting focus. |source| indicates
            where the focus request is originating from. Return false to allow the
            focus to be set or true to cancel setting the focus.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFocusHandler.OnGotFocus(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called when the browser component has received focus.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefFrame">
            <summary>
            Class used to represent a frame in the browser window. When used in the
            browser process the methods of this class may be called on any thread unless
            otherwise indicated in the comments. When used in the render process the
            methods of this class may only be called on the main thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.Undo">
            <summary>
            Execute undo in this frame.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.Redo">
            <summary>
            Execute redo in this frame.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.Cut">
            <summary>
            Execute cut in this frame.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.Copy">
            <summary>
            Execute copy in this frame.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.Paste">
            <summary>
            Execute paste in this frame.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.Delete">
            <summary>
            Execute delete in this frame.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.SelectAll">
            <summary>
            Execute select all in this frame.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.ViewSource">
            <summary>
            Save this frame's HTML source to a temporary file and open it in the
            default text viewing application. This method can only be called from the
            browser process.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.GetSource(Xilium.CefGlue.CefStringVisitor)">
            <summary>
            Retrieve this frame's HTML source as a string sent to the specified
            visitor.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.GetText(Xilium.CefGlue.CefStringVisitor)">
            <summary>
            Retrieve this frame's display text as a string sent to the specified
            visitor.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.LoadRequest(Xilium.CefGlue.CefRequest)">
            <summary>
            Load the request represented by the |request| object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.LoadUrl(System.String)">
            <summary>
            Load the specified |url|.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.LoadString(System.String,System.String)">
            <summary>
            Load the contents of |string_val| with the specified dummy |url|. |url|
            should have a standard scheme (for example, http scheme) or behaviors like
            link clicks and web security restrictions may not behave as expected.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.ExecuteJavaScript(System.String,System.String,System.Int32)">
            <summary>
            Execute a string of JavaScript code in this frame. The |script_url|
            parameter is the URL where the script in question can be found, if any.
            The renderer may request this URL to show the developer the source of the
            error.  The |start_line| parameter is the base line number to use for error
            reporting.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefFrame.VisitDom(Xilium.CefGlue.CefDomVisitor)">
            <summary>
            Visit the DOM document. This method can only be called from the render
            process.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.IsValid">
            <summary>
            True if this object is currently attached to a valid frame.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.IsMain">
            <summary>
            Returns true if this is the main (top-level) frame.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.IsFocused">
            <summary>
            Returns true if this is the focused frame.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.Name">
            <summary>
            Returns the name for this frame. If the frame has an assigned name (for
            example, set via the iframe "name" attribute) then that value will be
            returned. Otherwise a unique name will be constructed based on the frame
            parent hierarchy. The main (top-level) frame will always have an empty name
            value.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.Identifier">
            <summary>
            Returns the globally unique identifier for this frame.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.Parent">
            <summary>
            Returns the parent of this frame or NULL if this is the main (top-level)
            frame.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.Url">
            <summary>
            Returns the URL currently loaded in this frame.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.Browser">
            <summary>
            Returns the browser that this frame belongs to.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefFrame.V8Context">
            <summary>
            Get the V8 context associated with the frame. This method can only be
            called from the render process.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefGeolocationCallback">
            <summary>
            Callback interface used for asynchronous continuation of geolocation
            permission requests.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefGeolocationCallback.Continue(System.Boolean)">
            <summary>
            Call to allow or deny geolocation access.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefGeolocationHandler">
            <summary>
            Implement this interface to handle events related to geolocation permission
            requests. The methods of this class will be called on the browser process IO
            thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefGeolocationHandler.OnRequestGeolocationPermission(Xilium.CefGlue.CefBrowser,System.String,System.Int32,Xilium.CefGlue.CefGeolocationCallback)">
            <summary>
            Called when a page requests permission to access geolocation information.
            |requesting_url| is the URL requesting permission and |request_id| is the
            unique ID for the permission request. Call CefGeolocationCallback::Continue
            to allow or deny the permission request.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefGeolocationHandler.OnCancelGeolocationPermission(Xilium.CefGlue.CefBrowser,System.String,System.Int32)">
            <summary>
            Called when a geolocation access request is canceled. |requesting_url| is
            the URL that originally requested permission and |request_id| is the unique
            ID for the permission request.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefGetGeolocationCallback">
            <summary>
            Implement this interface to receive geolocation updates. The methods of this
            class will be called on the browser process UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefGetGeolocationCallback.OnLocationUpdate(Xilium.CefGlue.CefGeoposition)">
            <summary>
            Called with the 'best available' location information or, if the location
            update failed, with error information.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefJSDialogCallback">
            <summary>
            Callback interface used for asynchronous continuation of JavaScript dialog
            requests.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefJSDialogCallback.Continue(System.Boolean,System.String)">
            <summary>
            Continue the JS dialog request. Set |success| to true if the OK button was
            pressed. The |user_input| value should be specified for prompt dialogs.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefJSDialogHandler">
            <summary>
            Implement this interface to handle events related to JavaScript dialogs. The
            methods of this class will be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefJSDialogHandler.OnJSDialog(Xilium.CefGlue.CefBrowser,System.String,System.String,Xilium.CefGlue.CefJSDialogType,System.String,System.String,Xilium.CefGlue.CefJSDialogCallback,System.Boolean@)">
            <summary>
            Called to run a JavaScript dialog. The |default_prompt_text| value will be
            specified for prompt dialogs only. Set |suppress_message| to true and
            return false to suppress the message (suppressing messages is preferable
            to immediately executing the callback as this is used to detect presumably
            malicious behavior like spamming alert messages in onbeforeunload). Set
            |suppress_message| to false and return false to use the default
            implementation (the default implementation will show one modal dialog at a
            time and suppress any additional dialog requests until the displayed dialog
            is dismissed). Return true if the application will use a custom dialog or
            if the callback has been executed immediately. Custom dialogs may be either
            modal or modeless. If a custom dialog is used the application must execute
            |callback| once the custom dialog is dismissed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefJSDialogHandler.OnBeforeUnloadDialog(Xilium.CefGlue.CefBrowser,System.String,System.Boolean,Xilium.CefGlue.CefJSDialogCallback)">
            <summary>
            Called to run a dialog asking the user if they want to leave a page. Return
            false to use the default dialog implementation. Return true if the
            application will use a custom dialog or if the callback has been executed
            immediately. Custom dialogs may be either modal or modeless. If a custom
            dialog is used the application must execute |callback| once the custom
            dialog is dismissed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefJSDialogHandler.OnResetDialogState(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called to cancel any pending dialogs and reset any saved dialog state. Will
            be called due to events like page navigation irregardless of whether any
            dialogs are currently pending.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefJSDialogHandler.OnDialogClosed(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called when the default implementation dialog is closed.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefKeyboardHandler">
            <summary>
            Implement this interface to handle events related to keyboard input. The
            methods of this class will be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefKeyboardHandler.OnPreKeyEvent(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefKeyEvent,System.IntPtr,System.Boolean@)">
            <summary>
            Called before a keyboard event is sent to the renderer. |event| contains
            information about the keyboard event. |os_event| is the operating system
            event message, if any. Return true if the event was handled or false
            otherwise. If the event will be handled in OnKeyEvent() as a keyboard
            shortcut set |is_keyboard_shortcut| to true and return false.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefKeyboardHandler.OnKeyEvent(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefKeyEvent,System.IntPtr)">
            <summary>
            Called after the renderer and JavaScript in the page has had a chance to
            handle the event. |event| contains information about the keyboard event.
            |os_event| is the operating system event message, if any. Return true if
            the keyboard event was handled or false otherwise.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefLifeSpanHandler">
            <summary>
            Implement this interface to handle events related to browser life span. The
            methods of this class will be called on the UI thread unless otherwise
            indicated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLifeSpanHandler.OnBeforePopup(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,System.String,System.String,Xilium.CefGlue.CefPopupFeatures,Xilium.CefGlue.CefWindowInfo,Xilium.CefGlue.CefClient@,Xilium.CefGlue.CefBrowserSettings,System.Boolean@)">
            <summary>
            Called on the IO thread before a new popup window is created. The |browser|
            and |frame| parameters represent the source of the popup request. The
            |target_url| and |target_frame_name| values may be empty if none were
            specified with the request. The |popupFeatures| structure contains
            information about the requested popup window. To allow creation of the
            popup window optionally modify |windowInfo|, |client|, |settings| and
            |no_javascript_access| and return false. To cancel creation of the popup
            window return true. The |client| and |settings| values will default to the
            source browser's values. The |no_javascript_access| value indicates whether
            the new browser window should be scriptable and in the same process as the
            source browser.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLifeSpanHandler.OnAfterCreated(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called after a new browser is created.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLifeSpanHandler.RunModal(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called when a modal window is about to display and the modal loop should
            begin running. Return false to use the default modal loop implementation or
            true to use a custom implementation.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLifeSpanHandler.DoClose(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called when a browser has recieved a request to close. This may result
            directly from a call to CefBrowserHost::CloseBrowser() or indirectly if the
            browser is a top-level OS window created by CEF and the user attempts to
            close the window. This method will be called after the JavaScript
            'onunload' event has been fired. It will not be called for browsers after
            the associated OS window has been destroyed (for those browsers it is no
            longer possible to cancel the close).
            If CEF created an OS window for the browser returning false will send an OS
            close notification to the browser window's top-level owner (e.g. WM_CLOSE
            on Windows, performClose: on OS-X and "delete_event" on Linux). If no OS
            window exists (window rendering disabled) returning false will cause the
            browser object to be destroyed immediately. Return true if the browser is
            parented to another window and that other window needs to receive close
            notification via some non-standard technique.
            If an application provides its own top-level window it should handle OS
            close notifications by calling CefBrowserHost::CloseBrowser(false) instead
            of immediately closing (see the example below). This gives CEF an
            opportunity to process the 'onbeforeunload' event and optionally cancel the
            close before DoClose() is called.
            The CefLifeSpanHandler::OnBeforeClose() method will be called immediately
            before the browser object is destroyed. The application should only exit
            after OnBeforeClose() has been called for all existing browsers.
            If the browser represents a modal window and a custom modal loop
            implementation was provided in CefLifeSpanHandler::RunModal() this callback
            should be used to restore the opener window to a usable state.
            By way of example consider what should happen during window close when the
            browser is parented to an application-provided top-level OS window.
            1.  User clicks the window close button which sends an OS close
            notification (e.g. WM_CLOSE on Windows, performClose: on OS-X and
            "delete_event" on Linux).
            2.  Application's top-level window receives the close notification and:
            A. Calls CefBrowserHost::CloseBrowser(false).
            B. Cancels the window close.
            3.  JavaScript 'onbeforeunload' handler executes and shows the close
            confirmation dialog (which can be overridden via
            CefJSDialogHandler::OnBeforeUnloadDialog()).
            4.  User approves the close.
            5.  JavaScript 'onunload' handler executes.
            6.  Application's DoClose() handler is called. Application will:
            A. Call CefBrowserHost::ParentWindowWillClose() to notify CEF that the
            parent window will be closing.
            B. Set a flag to indicate that the next close attempt will be allowed.
            C. Return false.
            7.  CEF sends an OS close notification.
            8.  Application's top-level window receives the OS close notification and
            allows the window to close based on the flag from #6B.
            9.  Browser OS window is destroyed.
            10. Application's CefLifeSpanHandler::OnBeforeClose() handler is called and
            the browser object is destroyed.
            11. Application exits by calling CefQuitMessageLoop() if no other browsers
            exist.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLifeSpanHandler.OnBeforeClose(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called just before a browser is destroyed. Release all references to the
            browser object and do not attempt to execute any methods on the browser
            object after this callback returns. If this is a modal window and a custom
            modal loop implementation was provided in RunModal() this callback should
            be used to exit the custom modal loop. See DoClose() documentation for
            additional usage information.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefListValue">
            <summary>
            Class representing a list value. Can be used on any process and thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.Create">
            <summary>
            Creates a new object that is not owned by any other object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.Copy">
            <summary>
            Returns a writable copy of this object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetSize(System.Int32)">
            <summary>
            Sets the number of values. If the number of values is expanded all
            new value slots will default to type null. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.Clear">
            <summary>
            Removes all values. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.Remove(System.Int32)">
            <summary>
            Removes the value at the specified index.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetValueType(System.Int32)">
            <summary>
            Returns the value type at the specified index.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetBool(System.Int32)">
            <summary>
            Returns the value at the specified index as type bool.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetInt(System.Int32)">
            <summary>
            Returns the value at the specified index as type int.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetDouble(System.Int32)">
            <summary>
            Returns the value at the specified index as type double.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetString(System.Int32)">
            <summary>
            Returns the value at the specified index as type string.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetBinary(System.Int32)">
            <summary>
            Returns the value at the specified index as type binary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetDictionary(System.Int32)">
            <summary>
            Returns the value at the specified index as type dictionary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.GetList(System.Int32)">
            <summary>
            Returns the value at the specified index as type list.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetNull(System.Int32)">
            <summary>
            Sets the value at the specified index as type null. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetBool(System.Int32,System.Boolean)">
            <summary>
            Sets the value at the specified index as type bool. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetInt(System.Int32,System.Int32)">
            <summary>
            Sets the value at the specified index as type int. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetDouble(System.Int32,System.Double)">
            <summary>
            Sets the value at the specified index as type double. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetString(System.Int32,System.String)">
            <summary>
            Sets the value at the specified index as type string. Returns true if the
            value was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetBinary(System.Int32,Xilium.CefGlue.CefBinaryValue)">
            <summary>
            Sets the value at the specified index as type binary. Returns true if the
            value was set successfully. After calling this method the |value| object
            will no longer be valid. If |value| is currently owned by another object
            then the value will be copied and the |value| reference will not change.
            Otherwise, ownership will be transferred to this object and the |value|
            reference will be invalidated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetDictionary(System.Int32,Xilium.CefGlue.CefDictionaryValue)">
            <summary>
            Sets the value at the specified index as type dict. Returns true if the
            value was set successfully. After calling this method the |value| object
            will no longer be valid. If |value| is currently owned by another object
            then the value will be copied and the |value| reference will not change.
            Otherwise, ownership will be transferred to this object and the |value|
            reference will be invalidated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefListValue.SetList(System.Int32,Xilium.CefGlue.CefListValue)">
            <summary>
            Sets the value at the specified index as type list. Returns true if the
            value was set successfully. After calling this method the |value| object
            will no longer be valid. If |value| is currently owned by another object
            then the value will be copied and the |value| reference will not change.
            Otherwise, ownership will be transferred to this object and the |value|
            reference will be invalidated.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefListValue.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this
            method returns false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefListValue.IsOwned">
            <summary>
            Returns true if this object is currently owned by another object.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefListValue.IsReadOnly">
            <summary>
            Returns true if the values of this object are read-only. Some APIs may
            expose read-only objects.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefListValue.Count">
            <summary>
            Returns the number of values.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefLoadHandler">
            <summary>
            Implement this interface to handle events related to browser load status. The
            methods of this class will be called on the browser process UI thread or
            render process main thread (TID_RENDERER).
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLoadHandler.OnLoadingStateChange(Xilium.CefGlue.CefBrowser,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Called when the loading state has changed. This callback will be executed
            twice -- once when loading is initiated either programmatically or by user
            action, and once when loading is terminated due to completion, cancellation
            of failure.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLoadHandler.OnLoadStart(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame)">
            <summary>
            Called when the browser begins loading a frame. The |frame| value will
            never be empty -- call the IsMain() method to check if this frame is the
            main frame. Multiple frames may be loading at the same time. Sub-frames may
            start or continue loading after the main frame load has ended. This method
            may not be called for a particular frame if the load request for that frame
            fails. For notification of overall browser load status use
            OnLoadingStateChange instead.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLoadHandler.OnLoadEnd(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,System.Int32)">
            <summary>
            Called when the browser is done loading a frame. The |frame| value will
            never be empty -- call the IsMain() method to check if this frame is the
            main frame. Multiple frames may be loading at the same time. Sub-frames may
            start or continue loading after the main frame load has ended. This method
            will always be called for all frames irrespective of whether the request
            completes successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefLoadHandler.OnLoadError(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefErrorCode,System.String,System.String)">
            <summary>
            Called when the resource load for a navigation fails or is canceled.
            |errorCode| is the error code number, |errorText| is the error text and
            |failedUrl| is the URL that failed to load. See net\base\net_error_list.h
            for complete descriptions of the error codes.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefMenuModel">
            <summary>
            Supports creation and modification of menus. See cef_menu_id_t for the
            command ids that have default implementations. All user-defined command ids
            should be between MENU_ID_USER_FIRST and MENU_ID_USER_LAST. The methods of
            this class can only be accessed on the browser process the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.Clear">
            <summary>
            Clears the menu. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.AddSeparator">
            <summary>
            Add a separator to the menu. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.AddItem(System.Int32,System.String)">
            <summary>
            Add an item to the menu. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.AddCheckItem(System.Int32,System.String)">
            <summary>
            Add a check item to the menu. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.AddRadioItem(System.Int32,System.String,System.Int32)">
            <summary>
            Add a radio item to the menu. Only a single item with the specified
            |group_id| can be checked at a time. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.AddSubMenu(System.Int32,System.String)">
            <summary>
            Add a sub-menu to the menu. The new sub-menu is returned.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.InsertSeparatorAt(System.Int32)">
            <summary>
            Insert a separator in the menu at the specified |index|. Returns true on
            success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.InsertItemAt(System.Int32,System.Int32,System.String)">
            <summary>
            Insert an item in the menu at the specified |index|. Returns true on
            success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.InsertCheckItemAt(System.Int32,System.Int32,System.String)">
            <summary>
            Insert a check item in the menu at the specified |index|. Returns true on
            success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.InsertRadioItemAt(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Insert a radio item in the menu at the specified |index|. Only a single
            item with the specified |group_id| can be checked at a time. Returns true
            on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.InsertSubMenuAt(System.Int32,System.Int32,System.String)">
            <summary>
            Insert a sub-menu in the menu at the specified |index|. The new sub-menu
            is returned.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.Remove(System.Int32)">
            <summary>
            Removes the item with the specified |commandId|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified |index|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetIndexOf(System.Int32)">
            <summary>
            Returns the index associated with the specified |commandId| or -1 if not
            found due to the command id not existing in the menu.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetCommandIdAt(System.Int32)">
            <summary>
            Returns the command id at the specified |index| or -1 if not found due to
            invalid range or the index being a separator.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetCommandIdAt(System.Int32,System.Int32)">
            <summary>
            Sets the command id at the specified |index|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetLabel(System.Int32)">
            <summary>
            Returns the label for the specified |commandId| or empty if not found.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetLabelAt(System.Int32)">
            <summary>
            Returns the label at the specified |index| or empty if not found due to
            invalid range or the index being a separator.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetLabel(System.Int32,System.String)">
            <summary>
            Sets the label for the specified |commandId|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetLabelAt(System.Int32,System.String)">
            <summary>
            Set the label at the specified |index|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetItemType(System.Int32)">
            <summary>
            Returns the item type for the specified |commandId|.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetItemTypeAt(System.Int32)">
            <summary>
            Returns the item type at the specified |index|.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetGroupId(System.Int32)">
            <summary>
            Returns the group id for the specified |commandId| or -1 if invalid.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetGroupIdAt(System.Int32)">
            <summary>
            Returns the group id at the specified |index| or -1 if invalid.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetGroupId(System.Int32,System.Int32)">
            <summary>
            Sets the group id for the specified |commandId|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetGroupIdAt(System.Int32,System.Int32)">
            <summary>
            Sets the group id at the specified |index|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetSubMenu(System.Int32)">
            <summary>
            Returns the submenu for the specified |commandId| or empty if invalid.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetSubMenuAt(System.Int32)">
            <summary>
            Returns the submenu at the specified |index| or empty if invalid.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.IsVisible(System.Int32)">
            <summary>
            Returns true if the specified |commandId| is visible.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.IsVisibleAt(System.Int32)">
            <summary>
            Returns true if the specified |index| is visible.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetVisible(System.Int32,System.Boolean)">
            <summary>
            Change the visibility of the specified |commandId|. Returns true on
            success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetVisibleAt(System.Int32,System.Boolean)">
            <summary>
            Change the visibility at the specified |index|. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.IsEnabled(System.Int32)">
            <summary>
            Returns true if the specified |commandId| is enabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.IsEnabledAt(System.Int32)">
            <summary>
            Returns true if the specified |index| is enabled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetEnabled(System.Int32,System.Boolean)">
            <summary>
            Change the enabled status of the specified |commandId|. Returns true on
            success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetEnabledAt(System.Int32,System.Boolean)">
            <summary>
            Change the enabled status at the specified |index|. Returns true on
            success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.IsChecked(System.Int32)">
            <summary>
            Returns true if the specified |commandId| is checked. Only applies to
            check and radio items.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.IsCheckedAt(System.Int32)">
            <summary>
            Returns true if the specified |index| is checked. Only applies to check
            and radio items.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetChecked(System.Int32,System.Boolean)">
            <summary>
            Check the specified |commandId|. Only applies to check and radio items.
            Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetCheckedAt(System.Int32,System.Boolean)">
            <summary>
            Check the specified |index|. Only applies to check and radio items. Returns
            true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.HasAccelerator(System.Int32)">
            <summary>
            Returns true if the specified |commandId| has a keyboard accelerator
            assigned.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.HasAcceleratorAt(System.Int32)">
            <summary>
            Returns true if the specified |index| has a keyboard accelerator assigned.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetAccelerator(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the keyboard accelerator for the specified |commandId|. |key_code| can
            be any virtual key or character value. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.SetAcceleratorAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the keyboard accelerator at the specified |index|. |key_code| can be
            any virtual key or character value. Returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.RemoveAccelerator(System.Int32)">
            <summary>
            Remove the keyboard accelerator for the specified |commandId|. Returns
            true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.RemoveAcceleratorAt(System.Int32)">
            <summary>
            Remove the keyboard accelerator at the specified |index|. Returns true on
            success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetAccelerator(System.Int32,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Retrieves the keyboard accelerator for the specified |commandId|. Returns
            true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefMenuModel.GetAcceleratorAt(System.Int32,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Retrieves the keyboard accelerator for the specified |index|. Returns true
            on success.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefMenuModel.Count">
            <summary>
            Returns the number of items in this menu.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefPostData">
            <summary>
            Class used to represent post data for a web request. The methods of this
            class may be called on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostData.Create">
            <summary>
            Create a new CefPostData object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostData.GetElements">
            <summary>
            Retrieve the post data elements.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostData.Remove(Xilium.CefGlue.CefPostDataElement)">
            <summary>
            Remove the specified post data element.  Returns true if the removal
            succeeds.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostData.Add(Xilium.CefGlue.CefPostDataElement)">
            <summary>
            Add the specified post data element.  Returns true if the add succeeds.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostData.RemoveAll">
            <summary>
            Remove all existing post data elements.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefPostData.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefPostData.Count">
            <summary>
            Returns the number of existing post data elements.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefPostDataElement">
            <summary>
            Class used to represent a single element in the request post data. The
            methods of this class may be called on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostDataElement.Create">
            <summary>
            Create a new CefPostDataElement object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostDataElement.SetToEmpty">
            <summary>
            Remove all contents from the post data element.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostDataElement.SetToFile(System.String)">
            <summary>
            The post data element will represent a file.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostDataElement.SetToBytes(System.Byte[])">
            <summary>
            The post data element will represent bytes.  The bytes passed
            in will be copied.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostDataElement.GetFile">
            <summary>
            Return the file name.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefPostDataElement.GetBytes">
            <summary>
            Read up to |size| bytes into |bytes| and return the number of bytes
            actually read.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefPostDataElement.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefPostDataElement.ElementType">
            <summary>
            Return the type of this post data element.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefPostDataElement.BytesCount">
            <summary>
            Return the number of bytes.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefProcessMessage">
            <summary>
            Class representing a message. Can be used on any process and thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefProcessMessage.Create(System.String)">
            <summary>
            Create a new CefProcessMessage object with the specified name.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefProcessMessage.Copy">
            <summary>
            Returns a writable copy of this object.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefProcessMessage.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this
            function returns false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefProcessMessage.IsReadOnly">
            <summary>
            Returns true if the values of this object are read-only. Some APIs may
            expose read-only objects.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefProcessMessage.Name">
            <summary>
            Returns the message name.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefProcessMessage.Arguments">
            <summary>
            Returns the list of arguments.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefQuotaCallback">
            <summary>
            Callback interface used for asynchronous continuation of quota requests.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefQuotaCallback.Continue(System.Boolean)">
            <summary>
            Continue the quota request. If |allow| is true the request will be
            allowed. Otherwise, the request will be denied.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefQuotaCallback.Cancel">
            <summary>
            Cancel the quota request.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefReadHandler">
            <summary>
            Interface the client can implement to provide a custom stream reader. The
            methods of this class may be called on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefReadHandler.Read(System.IO.Stream,System.Int64)">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefReadHandler.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Return zero on success and non-zero on
            failure.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefReadHandler.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefReadHandler.Eof">
            <summary>
            Return non-zero if at end of file.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefRenderHandler">
            <summary>
            Implement this interface to handle events when window rendering is disabled.
            The methods of this class will be called on the UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.GetRootScreenRect(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefRectangle@)">
            <summary>
            Called to retrieve the root window rectangle in screen coordinates. Return
            true if the rectangle was provided.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.GetViewRect(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefRectangle@)">
            <summary>
            Called to retrieve the view rectangle which is relative to screen
            coordinates. Return true if the rectangle was provided.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.GetScreenPoint(Xilium.CefGlue.CefBrowser,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Called to retrieve the translation from view coordinates to actual screen
            coordinates. Return true if the screen coordinates were provided.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.GetScreenInfo(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefScreenInfo)">
            <summary>
            Called to allow the client to fill in the CefScreenInfo object with
            appropriate values. Return true if the |screen_info| structure has been
            modified.
            If the screen info rectangle is left empty the rectangle from GetViewRect
            will be used. If the rectangle is still empty or invalid popups may not be
            drawn correctly.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.OnPopupShow(Xilium.CefGlue.CefBrowser,System.Boolean)">
            <summary>
            Called when the browser wants to show or hide the popup widget. The popup
            should be shown if |show| is true and hidden if |show| is false.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.OnPopupSize(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefRectangle)">
            <summary>
            Called when the browser wants to move or resize the popup widget. |rect|
            contains the new location and size.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.OnPaint(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefPaintElementType,Xilium.CefGlue.CefRectangle[],System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Called when an element should be painted. |type| indicates whether the
            element is the view or the popup widget. |buffer| contains the pixel data
            for the whole image. |dirtyRects| contains the set of rectangles that need
            to be repainted. On Windows |buffer| will be |width|*|height|*4 bytes
            in size and represents a BGRA image with an upper-left origin.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.OnCursorChange(Xilium.CefGlue.CefBrowser,System.IntPtr)">
            <summary>
            Called when the browser window's cursor has changed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderHandler.OnScrollOffsetChanged(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called when the scroll offset has changed.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefRenderProcessHandler">
            <summary>
            Class used to implement render process callbacks. The methods of this class
            will be called on the render process main thread (TID_RENDERER) unless
            otherwise indicated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnRenderThreadCreated(Xilium.CefGlue.CefListValue)">
            <summary>
            Called after the render process main thread has been created.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnWebKitInitialized">
            <summary>
            Called after WebKit has been initialized.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnBrowserCreated(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called after a browser has been created. When browsing cross-origin a new
            browser will be created before the old browser with the same identifier is
            destroyed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnBrowserDestroyed(Xilium.CefGlue.CefBrowser)">
            <summary>
            Called before a browser is destroyed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.GetLoadHandler">
            <summary>
            Return the handler for browser load status events.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnBeforeNavigation(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefRequest,Xilium.CefGlue.CefNavigationType,System.Boolean)">
            <summary>
            Called before browser navigation. Return true to cancel the navigation or
            false to allow the navigation to proceed. The |request| object cannot be
            modified in this callback.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnContextCreated(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefV8Context)">
            <summary>
            Called immediately after the V8 context for a frame has been created. To
            retrieve the JavaScript 'window' object use the CefV8Context::GetGlobal()
            method. V8 handles can only be accessed from the thread on which they are
            created. A task runner for posting tasks on the associated thread can be
            retrieved via the CefV8Context::GetTaskRunner() method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnContextReleased(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefV8Context)">
            <summary>
            Called immediately before the V8 context for a frame is released. No
            references to the context should be kept after this method is called.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnUncaughtException(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefV8Context,Xilium.CefGlue.CefV8Exception,Xilium.CefGlue.CefV8StackTrace)">
            <summary>
            Called for global uncaught exceptions in a frame. Execution of this
            callback is disabled by default. To enable set
            CefSettings.uncaught_exception_stack_size &gt; 0.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnFocusedNodeChanged(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefDomNode)">
            <summary>
            Called when a new node in the the browser gets focus. The |node| value may
            be empty if no specific node has gained focus. The node object passed to
            this method represents a snapshot of the DOM at the time this method is
            executed. DOM objects are only valid for the scope of this method. Do not
            keep references to or attempt to access any DOM objects outside the scope
            of this method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRenderProcessHandler.OnProcessMessageReceived(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefProcessId,Xilium.CefGlue.CefProcessMessage)">
            <summary>
            Called when a new message is received from a different process. Return true
            if the message was handled or false otherwise. Do not keep a reference to
            or attempt to access the message outside of this callback.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefRequest">
            <summary>
            Class used to represent a web request. The methods of this class may be
            called on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequest.Create">
            <summary>
            Create a new CefRequest object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequest.GetHeaderMap">
            <summary>
            Get the header values.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequest.SetHeaderMap(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Set the header values.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequest.Set(System.String,System.String,Xilium.CefGlue.CefPostData,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Set all values at one time.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.Url">
            <summary>
            Gets or sets the fully qualified URL.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.Method">
            <summary>
            Gets or sets the request method type.
            The value will default to POST if post data is provided and GET otherwise.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.PostData">
            <summary>
            Get the post data.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.Options">
            <summary>
            Get the options used in combination with CefUrlRequest.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.FirstPartyForCookies">
            <summary>
            Gets or sets the URL to the first party for cookies used in combination with
            CefWebURLRequest.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.ResourceType">
            <summary>
            Get the resource type for this request. Accurate resource type information
            may only be available in the browser process.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequest.TransitionType">
            <summary>
            Get the transition type for this request. Only available in the browser
            process and only applies to requests that represent a main frame or
            sub-frame navigation.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefRequestContext">
            <summary>
            A request context provides request handling for a set of related browser
            objects. A request context is specified when creating a new browser object
            via the CefBrowserHost static factory methods. Browser objects with different
            request contexts will never be hosted in the same render process. Browser
            objects with the same request context may or may not be hosted in the same
            render process depending on the process model. Browser objects created
            indirectly via the JavaScript window.open function or targeted links will
            share the same render process and the same request context as the source
            browser. When running in single-process mode there is only a single render
            process (the main process) and so all browsers created in single-process mode
            will share the same request context. This will be the first request context
            passed into a CefBrowserHost static factory method and all other request
            context objects will be ignored.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestContext.GetGlobalContext">
            <summary>
            Returns the global context object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestContext.CreateContext(Xilium.CefGlue.CefRequestContextHandler)">
            <summary>
            Creates a new context object with the specified handler.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestContext.IsSame(Xilium.CefGlue.CefRequestContext)">
            <summary>
            Returns true if this object is pointing to the same context as |that|
            object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestContext.GetHandler">
            <summary>
            Returns the handler for this context if any.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefRequestContext.IsGlobal">
            <summary>
            Returns true if this object is the global context.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefRequestContextHandler">
            <summary>
            Implement this interface to provide handler implementations.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestContextHandler.GetCookieManager">
            <summary>
            Called on the IO thread to retrieve the cookie manager. The global cookie
            manager will be used if this method returns NULL.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefRequestHandler">
            <summary>
            Implement this interface to handle events related to browser requests. The
            methods of this class will be called on the thread indicated.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnBeforeBrowse(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefRequest,System.Boolean)">
            <summary>
            Called on the UI thread before browser navigation. Return true to cancel
            the navigation or false to allow the navigation to proceed. The |request|
            object cannot be modified in this callback.
            CefLoadHandler::OnLoadingStateChange will be called twice in all cases.
            If the navigation is allowed CefLoadHandler::OnLoadStart and
            CefLoadHandler::OnLoadEnd will be called. If the navigation is canceled
            CefLoadHandler::OnLoadError will be called with an |errorCode| value of
            ERR_ABORTED.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnBeforeResourceLoad(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefRequest)">
            <summary>
            Called on the IO thread before a resource request is loaded. The |request|
            object may be modified. To cancel the request return true otherwise return
            false.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.GetResourceHandler(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,Xilium.CefGlue.CefRequest)">
            <summary>
            Called on the IO thread before a resource is loaded. To allow the resource
            to load normally return NULL. To specify a handler for the resource return
            a CefResourceHandler object. The |request| object should not be modified in
            this callback.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnResourceRedirect(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,System.String,System.String@)">
            <summary>
            Called on the IO thread when a resource load is redirected. The |old_url|
            parameter will contain the old URL. The |new_url| parameter will contain
            the new URL and can be changed if desired.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.GetAuthCredentials(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,System.Boolean,System.String,System.Int32,System.String,System.String,Xilium.CefGlue.CefAuthCallback)">
            <summary>
            Called on the IO thread when the browser needs credentials from the user.
            |isProxy| indicates whether the host is a proxy server. |host| contains the
            hostname and |port| contains the port number. Return true to continue the
            request and call CefAuthCallback::Continue() when the authentication
            information is available. Return false to cancel the request.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnQuotaRequest(Xilium.CefGlue.CefBrowser,System.String,System.Int64,Xilium.CefGlue.CefQuotaCallback)">
            <summary>
            Called on the IO thread when JavaScript requests a specific storage quota
            size via the webkitStorageInfo.requestQuota function. |origin_url| is the
            origin of the page making the request. |new_size| is the requested quota
            size in bytes. Return true and call CefQuotaCallback::Continue() either in
            this method or at a later time to grant or deny the request. Return false
            to cancel the request.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnProtocolExecution(Xilium.CefGlue.CefBrowser,System.String,System.Boolean@)">
            <summary>
            Called on the UI thread to handle requests for URLs with an unknown
            protocol component. Set |allow_os_execution| to true to attempt execution
            via the registered OS protocol handler, if any.
            SECURITY WARNING: YOU SHOULD USE THIS METHOD TO ENFORCE RESTRICTIONS BASED
            ON SCHEME, HOST OR OTHER URL ANALYSIS BEFORE ALLOWING OS EXECUTION.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnCertificateError(Xilium.CefGlue.CefErrorCode,System.String,Xilium.CefGlue.CefAllowCertificateErrorCallback)">
            <summary>
            Called on the UI thread to handle requests for URLs with an invalid
            SSL certificate. Return true and call CefAllowCertificateErrorCallback::
            Continue() either in this method or at a later time to continue or cancel
            the request. Return false to cancel the request immediately. If |callback|
            is empty the error cannot be recovered from and the request will be
            canceled automatically. If CefSettings.ignore_certificate_errors is set
            all invalid certificates will be accepted without calling this method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnBeforePluginLoad(Xilium.CefGlue.CefBrowser,System.String,System.String,Xilium.CefGlue.CefWebPluginInfo)">
            <summary>
            Called on the browser process IO thread before a plugin is loaded. Return
            true to block loading of the plugin.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnPluginCrashed(Xilium.CefGlue.CefBrowser,System.String)">
            <summary>
            Called on the browser process UI thread when a plugin has crashed.
            |plugin_path| is the path of the plugin that crashed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRequestHandler.OnRenderProcessTerminated(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefTerminationStatus)">
            <summary>
            Called on the browser process UI thread when the render process
            terminates unexpectedly. |status| indicates how the process
            terminated.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefResourceBundleHandler">
            <summary>
            Class used to implement a custom resource bundle interface. The methods of
            this class may be called on multiple threads.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceBundleHandler.GetLocalizedString(System.Int32)">
            <summary>
            Called to retrieve a localized translation for the string specified by
            |message_id|. To provide the translation set |string| to the translation
            string and return true. To use the default translation return false.
            Supported message IDs are listed in cef_pack_strings.h.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceBundleHandler.GetDataResource(System.Int32,System.Void**,System.UIntPtr*)">
            <summary>
            Called to retrieve data for the resource specified by |resource_id|. To
            provide the resource data set |data| and |data_size| to the data pointer
            and size respectively and return true. To use the default resource data
            return false. The resource data will not be copied and must remain resident
            in memory. Supported resource IDs are listed in cef_pack_resources.h.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefResourceHandler">
            <summary>
            Class used to implement a custom request handler interface. The methods of
            this class will always be called on the IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceHandler.ProcessRequest(Xilium.CefGlue.CefRequest,Xilium.CefGlue.CefCallback)">
            <summary>
            Begin processing the request. To handle the request return true and call
            CefCallback::Continue() once the response header information is available
            (CefCallback::Continue() can also be called from inside this method if
            header information is available immediately). To cancel the request return
            false.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceHandler.GetResponseHeaders(Xilium.CefGlue.CefResponse,System.Int64@,System.String@)">
            <summary>
            Retrieve response header information. If the response length is not known
            set |response_length| to -1 and ReadResponse() will be called until it
            returns false. If the response length is known set |response_length|
            to a positive value and ReadResponse() will be called until it returns
            false or the specified number of bytes have been read. Use the |response|
            object to set the mime type, http status code and other optional header
            values. To redirect the request to a new URL set |redirectUrl| to the new
            URL.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceHandler.ReadResponse(System.IO.Stream,System.Int32,System.Int32@,Xilium.CefGlue.CefCallback)">
            <summary>
            Read response data. If data is available immediately copy up to
            |bytes_to_read| bytes into |data_out|, set |bytes_read| to the number of
            bytes copied, and return true. To read the data at a later time set
            |bytes_read| to 0, return true and call CefCallback::Continue() when the
            data is available. To indicate response completion return false.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceHandler.CanGetCookie(Xilium.CefGlue.CefCookie)">
            <summary>
            Return true if the specified cookie can be sent with the request or false
            otherwise. If false is returned for any cookie then no cookies will be sent
            with the request.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceHandler.CanSetCookie(Xilium.CefGlue.CefCookie)">
            <summary>
            Return true if the specified cookie returned with the response can be set
            or false otherwise.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResourceHandler.Cancel">
            <summary>
            Request processing has been canceled.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefResponse">
            <summary>
            Class used to represent a web response. The methods of this class may be
            called on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResponse.Create">
            <summary>
            Create a new CefResponse object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResponse.GetHeader(System.String)">
            <summary>
            Get the value for the specified response header field.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResponse.GetHeaderMap">
            <summary>
            Get all response header fields.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefResponse.SetHeaderMap(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Set all response header fields.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefResponse.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefResponse.Status">
            <summary>
            Gets or sets the response status code.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefResponse.StatusText">
            <summary>
            Get the response status text.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefResponse.MimeType">
            <summary>
            Gets or sets the response mime type.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefRunFileDialogCallback">
            <summary>
            Callback interface for CefBrowserHost::RunFileDialog. The methods of this
            class will be called on the browser process UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefRunFileDialogCallback.OnFileDialogDismissed(Xilium.CefGlue.CefBrowserHost,System.String[])">
            <summary>
            Called asynchronously after the file dialog is dismissed. If the selection
            was successful |file_paths| will be a single value or a list of values
            depending on the dialog mode. If the selection was cancelled |file_paths|
            will be empty.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefSchemeHandlerFactory">
            <summary>
            Class that creates CefResourceHandler instances for handling scheme requests.
            The methods of this class will always be called on the IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefSchemeHandlerFactory.Create(Xilium.CefGlue.CefBrowser,Xilium.CefGlue.CefFrame,System.String,Xilium.CefGlue.CefRequest)">
            <summary>
            Return a new resource handler instance to handle the request or an empty
            reference to allow default handling of the request. |browser| and |frame|
            will be the browser window and frame respectively that originated the
            request or NULL if the request did not originate from a browser window
            (for example, if the request came from CefURLRequest). The |request| object
            passed to this method will not contain cookie data.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefSchemeRegistrar">
            <summary>
            Class that manages custom scheme registrations.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefSchemeRegistrar.AddCustomScheme(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Register a custom scheme. This method should not be called for the built-in
            HTTP, HTTPS, FILE, FTP, ABOUT and DATA schemes.
            If |is_standard| is true the scheme will be treated as a standard scheme.
            Standard schemes are subject to URL canonicalization and parsing rules as
            defined in the Common Internet Scheme Syntax RFC 1738 Section 3.1 available
            at http://www.ietf.org/rfc/rfc1738.txt
            In particular, the syntax for standard scheme URLs must be of the form:
            <pre>
            [scheme]://[username]:[password]@[host]:[port]/[url-path]
            </pre>
            Standard scheme URLs must have a host component that is a fully qualified
            domain name as defined in Section 3.5 of RFC 1034 [13] and Section 2.1 of
            RFC 1123. These URLs will be canonicalized to "scheme://host/path" in the
            simplest case and "scheme://username:password@host:port/path" in the most
            explicit case. For example, "scheme:host/path" and "scheme:///host/path"
            will both be canonicalized to "scheme://host/path". The origin of a
            standard scheme URL is the combination of scheme, host and port (i.e.,
            "scheme://host:port" in the most explicit case).
            For non-standard scheme URLs only the "scheme:" component is parsed and
            canonicalized. The remainder of the URL will be passed to the handler
            as-is. For example, "scheme:///some%20text" will remain the same.
            Non-standard scheme URLs cannot be used as a target for form submission.
            If |is_local| is true the scheme will be treated as local (i.e., with the
            same security rules as those applied to "file" URLs). Normal pages cannot
            link to or access local URLs. Also, by default, local URLs can only perform
            XMLHttpRequest calls to the same URL (origin + path) that originated the
            request. To allow XMLHttpRequest calls from a local URL to other URLs with
            the same origin set the CefSettings.file_access_from_file_urls_allowed
            value to true. To allow XMLHttpRequest calls from a local URL to all
            origins set the CefSettings.universal_access_from_file_urls_allowed value
            to true.
            If |is_display_isolated| is true the scheme will be treated as display-
            isolated. This means that pages cannot display these URLs unless they are
            from the same scheme. For example, pages in another origin cannot create
            iframes or hyperlinks to URLs with this scheme.
            This function may be called on any thread. It should only be called once
            per unique |scheme_name| value. If |scheme_name| is already registered or
            if an error occurs this method will return false.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefStreamReader">
            <summary>
            Class used to read data from a stream. The methods of this class may be
            called on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamReader.Create(System.String)">
            <summary>
            Create a new CefStreamReader object from a file.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamReader.Create(System.Void*,System.Int64)">
            <summary>
            Create a new CefStreamReader object from data.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamReader.Create(Xilium.CefGlue.CefReadHandler)">
            <summary>
            Create a new CefStreamReader object from a custom handler.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamReader.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read raw binary data.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamReader.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Returns zero on success and non-zero on
            failure.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamReader.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamReader.Eof">
            <summary>
            Return non-zero if at end of file.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefStreamWriter">
            <summary>
            Class used to write data to a stream. The methods of this class may be called
            on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamWriter.Create(System.String)">
            <summary>
            Create a new CefStreamWriter object for a file.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamWriter.Create(Xilium.CefGlue.CefWriteHandler)">
            <summary>
            Create a new CefStreamWriter object for a custom handler.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write raw binary data.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamWriter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Returns zero on success and non-zero on
            failure.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamWriter.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStreamWriter.Flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefStringVisitor">
            <summary>
            Implement this interface to receive string values asynchronously.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefStringVisitor.Visit(System.String)">
            <summary>
            Method that will be executed.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefTask">
            <summary>
            Implement this interface for asynchronous task execution. If the task is
            posted successfully and if the associated message loop is still running then
            the Execute() method will be called on the target thread. If the task fails
            to post then the task object may be destroyed on the source thread instead of
            the target thread. For this reason be cautious when performing work in the
            task object destructor.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTask.Execute">
            <summary>
            Method that will be executed on the target thread.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefTaskRunner">
            <summary>
            Class that asynchronously executes tasks on the associated thread. It is safe
            to call the methods of this class on any thread.
            CEF maintains multiple internal threads that are used for handling different
            types of tasks in different processes. The cef_thread_id_t definitions in
            cef_types.h list the common CEF threads. Task runners are also available for
            other CEF threads as appropriate (for example, V8 WebWorker threads).
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTaskRunner.GetForCurrentThread">
            <summary>
            Returns the task runner for the current thread. Only CEF threads will have
            task runners. An empty reference will be returned if this method is called
            on an invalid thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTaskRunner.GetForThread(Xilium.CefGlue.CefThreadId)">
            <summary>
            Returns the task runner for the specified CEF thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTaskRunner.IsSame(Xilium.CefGlue.CefTaskRunner)">
            <summary>
            Returns true if this object is pointing to the same task runner as |that|
            object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTaskRunner.BelongsToThread(Xilium.CefGlue.CefThreadId)">
            <summary>
            Returns true if this task runner is for the specified CEF thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTaskRunner.PostTask(Xilium.CefGlue.CefTask)">
            <summary>
            Post a task for execution on the thread associated with this task runner.
            Execution will occur asynchronously.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTaskRunner.PostDelayedTask(Xilium.CefGlue.CefTask,System.Int64)">
            <summary>
            Post a task for delayed execution on the thread associated with this task
            runner. Execution will occur asynchronously. Delayed tasks are not
            supported on V8 WebWorker threads and will be executed without the
            specified delay.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefTaskRunner.BelongsToCurrentThread">
            <summary>
            Returns true if this task runner belongs to the current thread.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefTraceClient">
            <summary>
            Implement this interface to receive trace notifications. The methods of this
            class will be called on the browser process UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTraceClient.OnTraceDataCollected(System.IO.Stream)">
            <summary>
            Called 0 or more times between CefBeginTracing and OnEndTracingComplete
            with a UTF8 JSON |fragment| of the specified |fragment_size|. Do not keep
            a reference to |fragment|.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTraceClient.OnTraceBufferPercentFullReply(System.Single)">
            <summary>
            Called in response to CefGetTraceBufferPercentFullAsync.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefTraceClient.OnEndTracingComplete">
            <summary>
            Called after all processes have sent their trace data.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefUrlRequest">
            <summary>
            Class used to make a URL request. URL requests are not associated with a
            browser instance so no CefClient callbacks will be executed. URL requests
            can be created on any valid CEF thread in either the browser or render
            process. Once created the methods of the URL request object must be accessed
            on the same thread that created it.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequest.Create(Xilium.CefGlue.CefRequest,Xilium.CefGlue.CefUrlRequestClient)">
            <summary>
            Create a new URL request. Only GET, POST, HEAD, DELETE and PUT request
            methods are supported. Multiple post data elements are not supported and
            elements of type PDE_TYPE_FILE are only supported for requests originating
            from the browser process. Requests originating from the render process will
            receive the same handling as requests originating from Web content -- if
            the response contains Content-Disposition or Mime-Type header values that
            would not normally be rendered then the response may receive special
            handling inside the browser (for example, via the file download code path
            instead of the URL request code path). The |request| object will be marked
            as read-only after calling this method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequest.GetRequest">
            <summary>
            Returns the request object used to create this URL request. The returned
            object is read-only and should not be modified.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequest.GetClient">
            <summary>
            Returns the client.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequest.GetResponse">
            <summary>
            Returns the response, or NULL if no response information is available.
            Response information will only be available after the upload has completed.
            The returned object is read-only and should not be modified.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequest.Cancel">
            <summary>
            Cancel the request.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefUrlRequest.RequestStatus">
            <summary>
            Returns the request status.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefUrlRequest.RequestError">
            <summary>
            Returns the request error if status is UR_CANCELED or UR_FAILED, or 0
            otherwise.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefUrlRequestClient">
            <summary>
            Interface that should be implemented by the CefURLRequest client. The
            methods of this class will be called on the same thread that created the
            request unless otherwise documented.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequestClient.OnRequestComplete(Xilium.CefGlue.CefUrlRequest)">
            <summary>
            Notifies the client that the request has completed. Use the
            CefURLRequest::GetRequestStatus method to determine if the request was
            successful or not.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequestClient.OnUploadProgress(Xilium.CefGlue.CefUrlRequest,System.UInt64,System.UInt64)">
            <summary>
            Notifies the client of upload progress. |current| denotes the number of
            bytes sent so far and |total| is the total size of uploading data (or -1 if
            chunked upload is enabled). This method will only be called if the
            UR_FLAG_REPORT_UPLOAD_PROGRESS flag is set on the request.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequestClient.OnDownloadProgress(Xilium.CefGlue.CefUrlRequest,System.UInt64,System.UInt64)">
            <summary>
            Notifies the client of download progress. |current| denotes the number of
            bytes received up to the call and |total| is the expected total size of the
            response (or -1 if not determined).
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequestClient.OnDownloadData(Xilium.CefGlue.CefUrlRequest,System.IO.Stream)">
            <summary>
            Called when some part of the response is read. |data| contains the current
            bytes received since the last call. This method will not be called if the
            UR_FLAG_NO_DOWNLOAD_DATA flag is set on the request.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefUrlRequestClient.GetAuthCredentials(System.Boolean,System.String,System.Int32,System.String,System.String,Xilium.CefGlue.CefAuthCallback)">
            <summary>
            Called on the IO thread when the browser needs credentials from the user.
            |isProxy| indicates whether the host is a proxy server. |host| contains the
            hostname and |port| contains the port number. Return true to continue the
            request and call CefAuthCallback::Continue() when the authentication
            information is available. Return false to cancel the request. This method
            will only be called for requests initiated from the browser process.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8Accessor">
            <summary>
            Interface that should be implemented to handle V8 function calls. The methods
            of this class will be called on the thread associated with the V8 function.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Accessor.Get(System.String,Xilium.CefGlue.CefV8Value,Xilium.CefGlue.CefV8Value@,System.String@)">
            <summary>
            Handle retrieval the accessor value identified by |name|. |object| is the
            receiver ('this' object) of the accessor. If retrieval succeeds set
            |retval| to the return value. If retrieval fails set |exception| to the
            exception that will be thrown. Return true if accessor retrieval was
            handled.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Accessor.Set(System.String,Xilium.CefGlue.CefV8Value,Xilium.CefGlue.CefV8Value,System.String@)">
            <summary>
            Handle assignment of the accessor value identified by |name|. |object| is
            the receiver ('this' object) of the accessor. |value| is the new value
            being assigned to the accessor. If assignment fails set |exception| to the
            exception that will be thrown. Return true if accessor assignment was
            handled.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8Context">
            <summary>
            Class representing a V8 context handle. V8 handles can only be accessed from
            the thread on which they are created. Valid threads for creating a V8 handle
            include the render process main thread (TID_RENDERER) and WebWorker threads.
            A task runner for posting tasks on the associated thread can be retrieved via
            the CefV8Context::GetTaskRunner() method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.GetCurrentContext">
            <summary>
            Returns the current (top) context object in the V8 context stack.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.GetEnteredContext">
            <summary>
            Returns the entered (bottom) context object in the V8 context stack.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.GetTaskRunner">
            <summary>
            Returns the task runner associated with this context. V8 handles can only
            be accessed from the thread on which they are created. This method can be
            called on any render process thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.GetBrowser">
            <summary>
            Returns the browser for this context. This method will return an empty
            reference for WebWorker contexts.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.GetFrame">
            <summary>
            Returns the frame for this context. This method will return an empty
            reference for WebWorker contexts.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.GetGlobal">
            <summary>
            Returns the global object for this context. The context must be entered
            before calling this method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.Enter">
            <summary>
            Enter this context. A context must be explicitly entered before creating a
            V8 Object, Array, Function or Date asynchronously. Exit() must be called
            the same number of times as Enter() before releasing this context. V8
            objects belong to the context in which they are created. Returns true if
            the scope was entered successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.Exit">
            <summary>
            Exit this context. Call this method only after calling Enter(). Returns
            true if the scope was exited successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.IsSame(Xilium.CefGlue.CefV8Context)">
            <summary>
            Returns true if this object is pointing to the same handle as |that|
            object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Context.TryEval(System.String,Xilium.CefGlue.CefV8Value@,Xilium.CefGlue.CefV8Exception@)">
            <summary>
            Evaluates the specified JavaScript code using this context's global object.
            On success |retval| will be set to the return value, if any, and the
            function will return true. On failure |exception| will be set to the
            exception, if any, and the function will return false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Context.InContext">
            <summary>
            Returns true if V8 is currently inside a context.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Context.IsValid">
            <summary>
            Returns true if the underlying handle is valid and it can be accessed on
            the current thread. Do not call any other methods if this method returns
            false.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8Exception">
            <summary>
            Class representing a V8 exception. The methods of this class may be called on
            any render process thread.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.Message">
            <summary>
            Returns the exception message.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.SourceLine">
            <summary>
            Returns the line of source code that the exception occurred within.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.ScriptResourceName">
            <summary>
            Returns the resource name for the script from where the function causing
            the error originates.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.LineNumber">
            <summary>
            Returns the 1-based number of the line where the error occurred or 0 if the
            line number is unknown.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.StartPosition">
            <summary>
            Returns the index within the script of the first character where the error
            occurred.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.EndPosition">
            <summary>
            Returns the index within the script of the last character where the error
            occurred.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.StartColumn">
            <summary>
            Returns the index within the line of the first character where the error
            occurred.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Exception.EndColumn">
            <summary>
            Returns the index within the line of the last character where the error
            occurred.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8Handler">
            <summary>
            Interface that should be implemented to handle V8 function calls. The methods
            of this class will always be called on the render process main thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Handler.Execute(System.String,Xilium.CefGlue.CefV8Value,Xilium.CefGlue.CefV8Value[],Xilium.CefGlue.CefV8Value@,System.String@)">
            <summary>
            Handle execution of the function identified by |name|. |object| is the
            receiver ('this' object) of the function. |arguments| is the list of
            arguments passed to the function. If execution succeeds set |retval| to the
            function return value. If execution fails set |exception| to the exception
            that will be thrown. Return true if execution was handled.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8StackFrame">
            <summary>
            Class representing a V8 stack frame handle. V8 handles can only be accessed
            from the thread on which they are created. Valid threads for creating a V8
            handle include the render process main thread (TID_RENDERER) and WebWorker
            threads. A task runner for posting tasks on the associated thread can be
            retrieved via the CefV8Context::GetTaskRunner() method.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.IsValid">
            <summary>
            Returns true if the underlying handle is valid and it can be accessed on
            the current thread. Do not call any other methods if this method returns
            false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.ScriptName">
            <summary>
            Returns the name of the resource script that contains the function.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.ScriptNameOrSourceUrl">
            <summary>
            Returns the name of the resource script that contains the function or the
            sourceURL value if the script name is undefined and its source ends with
            a "//@ sourceURL=..." string.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.FunctionName">
            <summary>
            Returns the name of the function.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.LineNumber">
            <summary>
            Returns the 1-based line number for the function call or 0 if unknown.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.Column">
            <summary>
            Returns the 1-based column offset on the line for the function call or 0 if
            unknown.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.IsEval">
            <summary>
            Returns true if the function was compiled using eval().
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackFrame.IsConstructor">
            <summary>
            Returns true if the function was called as a constructor via "new".
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8StackTrace">
            <summary>
            Class representing a V8 stack trace handle. V8 handles can only be accessed
            from the thread on which they are created. Valid threads for creating a V8
            handle include the render process main thread (TID_RENDERER) and WebWorker
            threads. A task runner for posting tasks on the associated thread can be
            retrieved via the CefV8Context::GetTaskRunner() method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8StackTrace.GetCurrent(System.Int32)">
            <summary>
            Returns the stack trace for the currently active context. |frame_limit| is
            the maximum number of frames that will be captured.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8StackTrace.GetFrame(System.Int32)">
            <summary>
            Returns the stack frame at the specified 0-based index.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackTrace.IsValid">
            <summary>
            Returns true if the underlying handle is valid and it can be accessed on
            the current thread. Do not call any other methods if this method returns
            false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8StackTrace.FrameCount">
            <summary>
            Returns the number of stack frames.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8Value">
            <summary>
            Class representing a V8 value handle. V8 handles can only be accessed from
            the thread on which they are created. Valid threads for creating a V8 handle
            include the render process main thread (TID_RENDERER) and WebWorker threads.
            A task runner for posting tasks on the associated thread can be retrieved via
            the CefV8Context::GetTaskRunner() method.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateUndefined">
            <summary>
            Create a new CefV8Value object of type undefined.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateNull">
            <summary>
            Create a new CefV8Value object of type null.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateBool(System.Boolean)">
            <summary>
            Create a new CefV8Value object of type bool.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateInt(System.Int32)">
            <summary>
            Create a new CefV8Value object of type int.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateUInt(System.UInt32)">
            <summary>
            Create a new CefV8Value object of type unsigned int.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateDouble(System.Double)">
            <summary>
            Create a new CefV8Value object of type double.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateDate(System.DateTime)">
            <summary>
            Create a new CefV8Value object of type Date. This method should only be
            called from within the scope of a CefV8ContextHandler, CefV8Handler or
            CefV8Accessor callback, or in combination with calling Enter() and Exit()
            on a stored CefV8Context reference.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateString(System.String)">
            <summary>
            Create a new CefV8Value object of type string.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateObject(Xilium.CefGlue.CefV8Accessor)">
            <summary>
            Create a new CefV8Value object of type object with optional accessor. This
            method should only be called from within the scope of a
            CefV8ContextHandler, CefV8Handler or CefV8Accessor callback, or in
            combination with calling Enter() and Exit() on a stored CefV8Context
            reference.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateArray(System.Int32)">
            <summary>
            Create a new CefV8Value object of type array with the specified |length|.
            If |length| is negative the returned array will have length 0. This method
            should only be called from within the scope of a CefV8ContextHandler,
            CefV8Handler or CefV8Accessor callback, or in combination with calling
            Enter() and Exit() on a stored CefV8Context reference.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.CreateFunction(System.String,Xilium.CefGlue.CefV8Handler)">
            <summary>
            Create a new CefV8Value object of type function. This method should only be
            called from within the scope of a CefV8ContextHandler, CefV8Handler or
            CefV8Accessor callback, or in combination with calling Enter() and Exit()
            on a stored CefV8Context reference.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.IsSame(Xilium.CefGlue.CefV8Value)">
            <summary>
            Returns true if this object is pointing to the same handle as |that|
            object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetBoolValue">
            <summary>
            Return a bool value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetIntValue">
            <summary>
            Return an int value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetUIntValue">
            <summary>
            Return an unisgned int value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetDoubleValue">
            <summary>
            Return a double value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetDateValue">
            <summary>
            Return a Date value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetStringValue">
            <summary>
            Return a string value.  The underlying data will be converted to if
            necessary.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetException">
            <summary>
            Returns the exception resulting from the last method call. This attribute
            exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.ClearException">
            <summary>
            Clears the last exception and returns true on success.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.WillRethrowExceptions">
            <summary>
            Returns true if this object will re-throw future exceptions. This attribute
            exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.SetRethrowExceptions(System.Boolean)">
            <summary>
            Set whether this object will re-throw future exceptions. By default
            exceptions are not re-thrown. If a exception is re-thrown the current
            context should not be accessed again until after the exception has been
            caught and not re-thrown. Returns true on success. This attribute exists
            only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.HasValue(System.String)">
            <summary>
            Returns true if the object has a value with the specified identifier.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.HasValue(System.Int32)">
            <summary>
            Returns true if the object has a value with the specified identifier.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.DeleteValue(System.String)">
            <summary>
            Deletes the value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly or an exception
            is thrown. For read-only and don't-delete values this method will return
            true even though deletion failed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.DeleteValue(System.Int32)">
            <summary>
            Deletes the value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly, deletion fails
            or an exception is thrown. For read-only and don't-delete values this
            method will return true even though deletion failed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetValue(System.String)">
            <summary>
            Returns the value with the specified identifier on success. Returns NULL
            if this method is called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetValue(System.Int32)">
            <summary>
            Returns the value with the specified identifier on success. Returns NULL
            if this method is called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.SetValue(System.String,Xilium.CefGlue.CefV8Value,Xilium.CefGlue.CefV8PropertyAttribute)">
            <summary>
            Associates a value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly or an exception
            is thrown. For read-only values this method will return true even though
            assignment failed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.SetValue(System.Int32,Xilium.CefGlue.CefV8Value)">
            <summary>
            Associates a value with the specified identifier and returns true on
            success. Returns false if this method is called incorrectly or an exception
            is thrown. For read-only values this method will return true even though
            assignment failed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.SetValue(System.String,Xilium.CefGlue.CefV8AccessControl,Xilium.CefGlue.CefV8PropertyAttribute)">
            <summary>
            Registers an identifier and returns true on success. Access to the
            identifier will be forwarded to the CefV8Accessor instance passed to
            CefV8Value::CreateObject(). Returns false if this method is called
            incorrectly or an exception is thrown. For read-only values this method
            will return true even though assignment failed.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.TryGetKeys(System.String[]@)">
            <summary>
            Read the keys for the object's values into the specified vector. Integer-
            based keys will also be returned as strings.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetKeys">
            <summary>
            Read the keys for the object's values into the specified vector. Integer-
            based keys will also be returned as strings.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.SetUserData(Xilium.CefGlue.CefUserData)">
            <summary>
            Sets the user data for this object and returns true on success. Returns
            false if this method is called incorrectly. This method can only be called
            on user created objects.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetUserData">
            <summary>
            Returns the user data, if any, assigned to this object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetExternallyAllocatedMemory">
            <summary>
            Returns the amount of externally allocated memory registered for the
            object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.AdjustExternallyAllocatedMemory(System.Int32)">
            <summary>
            Adjusts the amount of registered external memory for the object. Used to
            give V8 an indication of the amount of externally allocated memory that is
            kept alive by JavaScript objects. V8 uses this information to decide when
            to perform global garbage collection. Each CefV8Value tracks the amount of
            external memory associated with it and automatically decreases the global
            total by the appropriate amount on its destruction. |change_in_bytes|
            specifies the number of bytes to adjust by. This method returns the number
            of bytes associated with the object after the adjustment. This method can
            only be called on user created objects.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetArrayLength">
            <summary>
            ARRAY METHODS - These methods are only available on arrays.
            Returns the number of elements in the array.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetFunctionName">
            <summary>
            FUNCTION METHODS - These methods are only available on functions.
            Returns the function name.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.GetFunctionHandler">
            <summary>
            Returns the function handler or NULL if not a CEF-created function.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.ExecuteFunction(Xilium.CefGlue.CefV8Value,Xilium.CefGlue.CefV8Value[])">
            <summary>
            Execute the function using the current V8 context. This method should only
            be called from within the scope of a CefV8Handler or CefV8Accessor
            callback, or in combination with calling Enter() and Exit() on a stored
            CefV8Context reference. |object| is the receiver ('this' object) of the
            function. If |object| is empty the current context's global object will be
            used. |arguments| is the list of arguments that will be passed to the
            function. Returns the function return value on success. Returns NULL if
            this method is called incorrectly or an exception is thrown.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefV8Value.ExecuteFunctionWithContext(Xilium.CefGlue.CefV8Context,Xilium.CefGlue.CefV8Value,Xilium.CefGlue.CefV8Value[])">
            <summary>
            Execute the function using the specified V8 context. |object| is the
            receiver ('this' object) of the function. If |object| is empty the
            specified context's global object will be used. |arguments| is the list of
            arguments that will be passed to the function. Returns the function return
            value on success. Returns NULL if this method is called incorrectly or an
            exception is thrown.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsValid">
            <summary>
            Returns true if the underlying handle is valid and it can be accessed on
            the current thread. Do not call any other methods if this method returns
            false.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsUndefined">
            <summary>
            True if the value type is undefined.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsNull">
            <summary>
            True if the value type is null.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsBool">
            <summary>
            True if the value type is bool.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsInt">
            <summary>
            True if the value type is int.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsUInt">
            <summary>
            True if the value type is unsigned int.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsDouble">
            <summary>
            True if the value type is double.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsDate">
            <summary>
            True if the value type is Date.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsString">
            <summary>
            True if the value type is string.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsObject">
            <summary>
            True if the value type is object.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsArray">
            <summary>
            True if the value type is array.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsFunction">
            <summary>
            True if the value type is function.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.IsUserCreated">
            <summary>
            OBJECT METHODS - These methods are only available on objects. Arrays and
            functions are also objects. String- and integer-based keys can be used
            interchangably with the framework converting between them as necessary.
            Returns true if this is a user created object.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefV8Value.HasException">
            <summary>
            Returns true if the last method call resulted in an exception. This
            attribute exists only in the scope of the current CEF value object.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefWebPluginInfo">
            <summary>
            Information about a specific web plugin.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefWebPluginInfo.Name">
            <summary>
            Returns the plugin name (i.e. Flash).
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefWebPluginInfo.Path">
            <summary>
            Returns the plugin file path (DLL/bundle/library).
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefWebPluginInfo.Version">
            <summary>
            Returns the version of the plugin (may be OS-specific).
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefWebPluginInfo.Description">
            <summary>
            Returns a description of the plugin from the version information.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefWebPluginInfoVisitor">
            <summary>
            Interface to implement for visiting web plugin information. The methods of
            this class will be called on the browser process UI thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefWebPluginInfoVisitor.Visit(Xilium.CefGlue.CefWebPluginInfo,System.Int32,System.Int32)">
            <summary>
            Method that will be called once for each plugin. |count| is the 0-based
            index for the current plugin. |total| is the total number of plugins.
            Return false to stop visiting plugins. This method may never be called if
            no plugins are found.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefWebPluginUnstableCallback">
            <summary>
            Interface to implement for receiving unstable plugin information. The methods
            of this class will be called on the browser process IO thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefWebPluginUnstableCallback.IsUnstable(System.String,System.Boolean)">
            <summary>
            Method that will be called for the requested plugin. |unstable| will be
            true if the plugin has reached the crash count threshold of 3 times in 120
            seconds.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefWriteHandler">
            <summary>
            Interface the client can implement to provide a custom stream writer. The
            methods of this class may be called on any thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefWriteHandler.Write(System.IO.Stream,System.Int64)">
            <summary>
            Write raw binary data.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefWriteHandler.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek to the specified offset position. |whence| may be any one of
            SEEK_CUR, SEEK_END or SEEK_SET. Return zero on success and non-zero on
            failure.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefWriteHandler.Tell">
            <summary>
            Return the current offset position.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefWriteHandler.Flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefXmlReader">
            <summary>
            Class that supports the reading of XML data via the libxml streaming API.
            The methods of this class should only be called on the thread that creates
            the object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.Create(Xilium.CefGlue.CefStreamReader,Xilium.CefGlue.CefXmlEncoding,System.String)">
            <summary>
            Create a new CefXmlReader object. The returned object's methods can only
            be called from the thread that created the object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.MoveToNextNode">
            <summary>
            Moves the cursor to the next node in the document. This method must be
            called at least once to set the current cursor position. Returns true if
            the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.Close">
            <summary>
            Close the document. This should be called directly to ensure that cleanup
            occurs on the correct thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.GetAttribute(System.Int32)">
            <summary>
            Returns the value of the attribute at the specified 0-based index.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.GetAttribute(System.String)">
            <summary>
            Returns the value of the attribute with the specified qualified name.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.GetAttribute(System.String,System.String)">
            <summary>
            Returns the value of the attribute with the specified local name and
            namespace URI.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.GetInnerXml">
            <summary>
            Returns an XML representation of the current node's children.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.GetOuterXml">
            <summary>
            Returns an XML representation of the current node including its children.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.MoveToAttribute(System.Int32)">
            <summary>
            Attribute nodes are not traversed by default. The below methods can be
            used to move the cursor to an attribute node. MoveToCarryingElement() can
            be called afterwards to return the cursor to the carrying element. The
            depth of an attribute node will be 1 + the depth of the carrying element.
            Moves the cursor to the attribute at the specified 0-based index. Returns
            true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.MoveToAttribute(System.String)">
            <summary>
            Moves the cursor to the attribute with the specified qualified name.
            Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.MoveToAttribute(System.String,System.String)">
            <summary>
            Moves the cursor to the attribute with the specified local name and
            namespace URI. Returns true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.MoveToFirstAttribute">
            <summary>
            Moves the cursor to the first attribute in the current element. Returns
            true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.MoveToNextAttribute">
            <summary>
            Moves the cursor to the next attribute in the current element. Returns
            true if the cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefXmlReader.MoveToCarryingElement">
            <summary>
            Moves the cursor back to the carrying element. Returns true if the cursor
            position was set successfully.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.HasError">
            <summary>
            Returns true if an error has been reported by the XML parser.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.Error">
            <summary>
            Returns the error string.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.NodeType">
            <summary>
            The below methods retrieve data for the node at the current cursor
            position.
            Returns the node type.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.Depth">
            <summary>
            Returns the node depth. Depth starts at 0 for the root node.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.LocalName">
            <summary>
            Returns the local name. See
            http://www.w3.org/TR/REC-xml-names/#NT-LocalPart for additional details.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.Prefix">
            <summary>
            Returns the namespace prefix. See http://www.w3.org/TR/REC-xml-names/ for
            additional details.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.QualifiedName">
            <summary>
            Returns the qualified name, equal to (Prefix:)LocalName. See
            http://www.w3.org/TR/REC-xml-names/#ns-qualnames for additional details.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.NamespaceUri">
            <summary>
            Returns the URI defining the namespace associated with the node. See
            http://www.w3.org/TR/REC-xml-names/ for additional details.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.BaseUri">
            <summary>
            Returns the base URI of the node. See http://www.w3.org/TR/xmlbase/ for
            additional details.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.XmlLang">
            <summary>
            Returns the xml:lang scope within which the node resides. See
            http://www.w3.org/TR/REC-xml/#sec-lang-tag for additional details.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.IsEmptyElement">
            <summary>
            Returns true if the node represents an empty element. <a/> is considered
            empty but <a></a> is not.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.HasValue">
            <summary>
            Returns true if the node has a text value.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.Value">
            <summary>
            Returns the text value.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.HasAttributes">
            <summary>
            Returns true if the node has attributes.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.AttributeCount">
            <summary>
            Returns the number of attributes.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefXmlReader.LineNumber">
            <summary>
            Returns the line number for the current node.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefZipReader">
            <summary>
            Class that supports the reading of zip archives via the zlib unzip API.
            The methods of this class should only be called on the thread that creates
            the object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.Create(Xilium.CefGlue.CefStreamReader)">
            <summary>
            Create a new CefZipReader object. The returned object's methods can only
            be called from the thread that created the object.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.MoveToFirstFile">
            <summary>
            Moves the cursor to the first file in the archive. Returns true if the
            cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.MoveToNextFile">
            <summary>
            Moves the cursor to the next file in the archive. Returns true if the
            cursor position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.MoveToFile(System.String,System.Boolean)">
            <summary>
            Moves the cursor to the specified file in the archive. If |caseSensitive|
            is true then the search will be case sensitive. Returns true if the cursor
            position was set successfully.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.Close">
            <summary>
            Closes the archive. This should be called directly to ensure that cleanup
            occurs on the correct thread.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.GetFileName">
            <summary>
            The below methods act on the file at the current cursor position.
            Returns the name of the file.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.GetFileSize">
            <summary>
            Returns the uncompressed size of the file.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.GetFileLastModified">
            <summary>
            Returns the last modified timestamp for the file.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.OpenFile(System.String)">
            <summary>
            Opens the file for reading of uncompressed data. A read password may
            optionally be specified.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.CloseFile">
            <summary>
            Closes the file.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.ReadFile(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read uncompressed file contents into the specified buffer. Returns &lt; 0 if
            an error occurred, 0 if at the end of file, or the number of bytes read.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.Tell">
            <summary>
            Returns the current offset in the uncompressed file contents.
            </summary>
        </member>
        <member name="M:Xilium.CefGlue.CefZipReader.Eof">
            <summary>
            Returns true if at end of the file contents.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDragOperationsMask">
            <summary>
            "Verb" of a drag-and-drop operation as negotiated between the source and
            destination. These constants match their equivalents in WebCore's
            DragActions.h and should not be renumbered.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefFileDialogMode">
            <summary>
            Supported file dialog modes.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefFileDialogMode.Open">
            <summary>
            Requires that the file exists before allowing the user to pick it.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefFileDialogMode.OpenMultiple">
            <summary>
            Like Open, but allows picking multiple files to open.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefFileDialogMode.Save">
            <summary>
            Allows picking a nonexistent file, and prompts to overwrite if the file
            already exists.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefFocusSource">
            <summary>
            Focus sources.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefFocusSource.Navigation">
            <summary>
            The source is explicit navigation via the API (LoadURL(), etc).
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefFocusSource.System">
            <summary>
            The source is a system-generated focus event.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefGeopositionErrorCode">
            <summary>
            Geoposition error codes.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefKeyEventType">
            <summary>
            Key event types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefLogSeverity">
            <summary>
            Log severity levels.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefLogSeverity.Default">
            <summary>
            Default logging (currently INFO logging).
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefLogSeverity.Verbose">
            <summary>
            Verbose logging.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefLogSeverity.Info">
            <summary>
            INFO logging.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefLogSeverity.Warning">
            <summary>
            WARNING logging.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefLogSeverity.Error">
            <summary>
            ERROR logging.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefLogSeverity.ErrorReport">
            <summary>
            ERROR_REPORT logging.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefLogSeverity.Disable">
            <summary>
            Completely disable logging.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefMouseButtonType">
            <summary>
            Mouse button types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefResourceType">
            <summary>
            Resource type for a request.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.MainFrame">
            <summary>
            Top level page.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.SubFrame">
            <summary>
            Frame or iframe.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Stylesheet">
            <summary>
            CSS stylesheet.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Script">
            <summary>
            External script.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Image">
            <summary>
            Image (jpg/gif/png/etc).
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.FontResource">
            <summary>
            Font.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.SubResource">
            <summary>
            Some other subresource. This is the default type if the actual type is
            unknown.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Object">
            <summary>
            Object (or embed) tag for a plugin, or a resource that a plugin requested.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Media">
            <summary>
            Media resource.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Worker">
            <summary>
            Main resource of a dedicated worker.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.SharedWorker">
            <summary>
            Main resource of a shared worker.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Prefetch">
            <summary>
            Explicitly requested prefetch.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Favicon">
            <summary>
            Favicon.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefResourceType.Xhr">
            <summary>
            XMLHttpRequest.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefState">
            <summary>
            Represents the state of a setting.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefState.Default">
            <summary>
            Use the default state for the setting.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefState.Enabled">
            <summary>
            Enable or allow the setting.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefState.Disabled">
            <summary>
            Disable or disallow the setting.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefStorageType">
            <summary>
            Storage types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefErrorCode">
            <summary>
            Supported error code values.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefTransitionType">
            <summary>
            Transition type for a request. Made up of one source value and 0 or more
            qualifiers.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.Link">
            <summary>
            Source is a link click or the JavaScript window.open function. This is
            also the default value for requests like sub-resource loads that are not
            navigations.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.Explicit">
            <summary>
            Source is some other "explicit" navigation action such as creating a new
            browser or using the LoadURL function. This is also the default value
            for navigations where the actual type is unknown.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.AutoSubframe">
            <summary>
            Source is a subframe navigation. This is any content that is automatically
            loaded in a non-toplevel frame. For example, if a page consists of several
            frames containing ads, those ad URLs will have this transition type.
            The user may not even realize the content in these pages is a separate
            frame, so may not care about the URL.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.ManualSubframe">
            <summary>
            Source is a subframe navigation explicitly requested by the user that will
            generate new navigation entries in the back/forward list. These are
            probably more important than frames that were automatically loaded in
            the background because the user probably cares about the fact that this
            link was loaded.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.FormSubmit">
            <summary>
            Source is a form submission by the user. NOTE: In some situations
            submitting a form does not result in this transition type. This can happen
            if the form uses a script to submit the contents.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.Reload">
            <summary>
            Source is a "reload" of the page via the Reload function or by re-visiting
            the same URL. NOTE: This is distinct from the concept of whether a
            particular load uses "reload semantics" (i.e. bypasses cached data).
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.SourceMask">
            <summary>
            General mask defining the bits used for the source values.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.BlockedFlag">
            <summary>
            Attempted to visit a URL but was blocked.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.ForwardBackFlag">
            <summary>
            Used the Forward or Back function to navigate among browsing history.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.ChainStartFlag">
            <summary>
            The beginning of a navigation chain.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.ChainEndFlag">
            <summary>
            The last transition in a redirect chain.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.ClientRedirectFlag">
            <summary>
            Redirects caused by JavaScript or a meta refresh tag on the page.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.ServerRedirectFlag">
            <summary>
            Redirects sent from the server by HTTP headers.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.IsRedirectMask">
            <summary>
            Used to test whether a transition involves a redirect.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTransitionType.QualifierMask">
            <summary>
            General mask defining the bits used for the qualifiers.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8AccessControl">
            <summary>
            V8 access control values.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefV8PropertyAttribute">
            <summary>
            V8 property attribute values.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefPostDataElementType">
            <summary>
            Post data elements may represent either bytes or files.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.None">
            <summary>
            Default behavior.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.SkipCache">
            <summary>
            If set the cache will be skipped when handling the request.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.AllowCachedCredentials">
            <summary>
            If set user name, password, and cookies may be sent with the request.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.AllowCookies">
            <summary>
            If set cookies may be sent with the request and saved from the response.
            <c>AllowCachedCredentials</c> must also be set.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.ReportUploadProgress">
            <summary>
            If set upload progress events will be generated when a request has a body.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.ReportLoadTiming">
            <summary>
            If set load timing info will be collected for the request.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.ReportRawHeaders">
            <summary>
            If set the headers sent and received for the request will be recorded.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.NoDownloadData">
            <summary>
            If set the <c>CefUrlRequestClient.OnDownloadData</c> method will not be called.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestOptions.NoRetryOn5XX">
            <summary>
            If set 5XX redirect errors will be propagated to the observer instead of
            automatically re-tried. This currently only applies for requests
            originated in the browser process.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefProcessId">
            <summary>
            Existing process IDs.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefThreadId">
            <summary>
            Existing thread IDs.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.UI">
            <summary>
            The main thread in the browser. This will be the same as the main
            application thread if CefInitialize() is called with a
            CefSettings.multi_threaded_message_loop value of false.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.DB">
            <summary>
            Used to interact with the database.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.File">
            <summary>
            Used to interact with the file system.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.FileUserBlocking">
            <summary>
            Used for file system operations that block user interactions.
            Responsiveness of this thread affects users.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.ProcessLauncher">
            <summary>
            Used to launch and terminate browser processes.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.Cache">
            <summary>
            Used to handle slow HTTP cache operations.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.IO">
            <summary>
            Used to process IPC and network messages.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefThreadId.Renderer">
            <summary>
            The main thread in the renderer. Used for all WebKit and V8 interaction.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefValueType">
            <summary>
            Supported value types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefXmlEncoding">
            <summary>
            Supported XML encoding types. The parser supports ASCII, ISO-8859-1, and
            UTF16 (LE and BE) by default. All other types must be translated to UTF8
            before being passed to the parser. If a BOM is detected and the correct
            decoder is available then that decoder will be used automatically.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefXmlNodeType">
            <summary>
            XML node types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefJSDialogType">
            <summary>
            Supported JavaScript dialog types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefMenuId">
            <summary>
            Supported menu IDs. Non-English translations can be provided for the
            IDS_MENU_* strings in CefResourceBundleHandler::GetLocalizedString().
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefEventFlags">
            <summary>
            Supported event bit flags.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefEventFlags.CommandDown">
            <summary>
            Mac OS-X command key.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefMenuItemType">
            <summary>
            Supported menu item types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefContextMenuTypeFlags">
            <summary>
            Supported context menu type flags.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuTypeFlags.None">
            <summary>
            No node is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuTypeFlags.Page">
            <summary>
            The top page is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuTypeFlags.Frame">
            <summary>
            A subframe page is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuTypeFlags.Link">
            <summary>
            A link is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuTypeFlags.Media">
            <summary>
            A media node is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuTypeFlags.Selection">
            <summary>
            There is a textual or mixed selection that is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuTypeFlags.Editable">
            <summary>
            An editable element is selected.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefContextMenuMediaType">
            <summary>
            Supported context menu media types.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuMediaType.None">
            <summary>
            No special node is in context.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuMediaType.Image">
            <summary>
            An image node is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuMediaType.Video">
            <summary>
            A video node is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuMediaType.Audio">
            <summary>
            An audio node is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuMediaType.File">
            <summary>
            A file node is selected.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextMenuMediaType.Plugin">
            <summary>
            A plugin node is selected.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefContextMenuMediaStateFlags">
            <summary>
            Supported context menu media state bit flags.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefContextMenuEditStateFlags">
            <summary>
            Supported context menu edit state bit flags.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomDocumentType">
            <summary>
            DOM document types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomEventCategory">
            <summary>
            DOM event category flags.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomEventPhase">
            <summary>
            DOM event processing phases.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefDomNodeType">
            <summary>
            DOM node types.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestStatus.Unknown">
            <summary>
            Unknown status.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestStatus.Success">
            <summary>
            Request succeeded.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestStatus.IOPending">
            <summary>
            An IO request is pending, and the caller will be informed when it is
            completed.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestStatus.Canceled">
            <summary>
            Request was canceled programatically.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefUrlRequestStatus.Failed">
            <summary>
            Request failed for some reason.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefTerminationStatus">
            <summary>
            Process termination status values.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTerminationStatus.Termination">
            <summary>
            Non-zero exit status.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTerminationStatus.WasKilled">
            <summary>
            SIGKILL or task manager kill.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefTerminationStatus.ProcessCrashed">
            <summary>
            Segmentation fault.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefPathKey">
            <summary>
            Path key values.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefPathKey.Current">
            <summary>
            Current directory.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefPathKey.DirExe">
            <summary>
            Directory containing PK_FILE_EXE.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefPathKey.DirModule">
            <summary>
            Directory containing PK_FILE_MODULE.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefPathKey.DirTemp">
            <summary>
            Temporary directory.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefPathKey.FileExe">
            <summary>
            Path and filename of the current executable.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefPathKey.FileModule">
            <summary>
            Path and filename of the module containing the CEF code (usually the libcef
            module).
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefContextSafetyImplementation">
            <summary>
            CEF offers two context safety implementations with different performance characteristics.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextSafetyImplementation.SafeDefault">
            <summary>
            The default implementation (value of 0) uses a map of hash values and should provide
            better performance in situations with a small number contexts.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextSafetyImplementation.SafeAlternate">
            <summary>
            The alternate implementation (value of 1) uses a hidden value attached to each context
            and should provide better performance in situations with a large number of contexts.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.CefContextSafetyImplementation.Disabled">
            <summary>
            If you need better performance in the creation of V8 references and you
            plan to manually track context lifespan you can disable context safety by
            specifying a value of -1.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefPaintElementType">
            <summary>
            Paint element types.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefWindowInfo">
            <summary>
            Class representing window information.
            </summary>
            <remarks>
            Meanings for handles:
            <list type="table">
                <listheader>
                    <item>Platform</item>
                    <description>Description</description>
                </listheader>
                <item>
                    <item>Windows</item>
                    <description>Window handle (HWND)</description>
                </item>
                <item>
                    <item>Mac OS X</item>
                    <description>NSView pointer for the parent view (NSView*)</description>
                </item>
                <item>
                    <item>Linux</item>
                    <description>Pointer for the new browser widget (GtkWidget*)</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="P:Xilium.CefGlue.CefWindowInfo.ParentHandle">
            <summary>
            Handle for the parent window.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefWindowInfo.Handle">
            <summary>
            Handle for the new browser window.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefWindowInfo.WindowRenderingDisabled">
            <summary>
            -- Windows --
            If window rendering is disabled no browser window will be created. Set
            |parent_window| to be used for identifying monitor info
            (MonitorFromWindow). If |parent_window| is not provided the main screen
            monitor will be used.
            
            -- MacOSX --
            If window rendering is disabled no browser window will be created. Set
            |parent_view| to the window that will act as the parent for popup menus,
            dialog boxes, etc.
            
            -- Linux --
            Unsupported
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefWindowInfo.TransparentPainting">
            <summary>
            Set to true to enable transparent painting.
            If window rendering is disabled and |transparent_painting| is set to true
            WebKit rendering will draw on a transparent background (RGBA=0x00000000).
            When this value is false the background will be white and opaque.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.Platform.Windows.WindowStyle">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required.
            After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_BORDER">
            <summary>The window has a thin-line border.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style).</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_CHILD">
            <summary>The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_CLIPCHILDREN">
            <summary>Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated.
            If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_DISABLED">
            <summary>The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has been created, use the EnableWindow function.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_DLGFRAME">
            <summary>The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style.
            The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_HSCROLL">
            <summary>The window has a horizontal scroll bar.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_MAXIMIZE">
            <summary>The window is initially maximized.</summary> 
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_MAXIMIZEBOX">
            <summary>The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary> 
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_MINIMIZE">
            <summary>The window is initially minimized.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_MINIMIZEBOX">
            <summary>The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_OVERLAPPEDWINDOW">
            <summary>The window is an overlapped window.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_POPUPWINDOW">
            <summary>The window is a pop-up window. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_SIZEFRAME">
            <summary>The window has a sizing border.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key.
            Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.  
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            For user-created windows and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_VISIBLE">
            <summary>The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyle.WS_VSCROLL">
            <summary>The window has a vertical scroll bar.</summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. 
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. 
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left. 
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_LEFT">
            <summary>
            Creates a window that has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_LTRREADING">
            <summary>
            The window text is displayed using left-to-right reading-order properties. This is the default.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_MDICHILD">
            <summary>
            Creates a multiple-document interface (MDI) child window.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window. 
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_RIGHT">
            <summary>
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively. Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE. 
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:Xilium.CefGlue.Platform.Windows.WindowStyleEx.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefGeoposition">
            <summary>
            Structure representing geoposition information. The properties of this
            structure correspond to those of the JavaScript Position object although
            their types may differ.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.Latitude">
            <summary>
            Latitude in decimal degrees north (WGS84 coordinate frame).
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.Longitude">
            <summary>
            Longitude in decimal degrees west (WGS84 coordinate frame).
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.Altitude">
            <summary>
            Altitude in meters (above WGS84 datum).
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.Accuracy">
            <summary>
            Accuracy of horizontal position in meters.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.AltitudeAccuracy">
            <summary>
            Accuracy of altitude in meters.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.Heading">
            <summary>
            Heading in decimal degrees clockwise from true north.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.Speed">
            <summary>
            Horizontal component of device velocity in meters per second.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.Timestamp">
            <summary>
            Time of position measurement in miliseconds since Epoch in UTC time. This
            is taken from the host computer's system clock.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.ErrorCode">
            <summary>
            Error code, see enum above.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefGeoposition.ErrorMessage">
            <summary>
            Human-readable error message.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.EventType">
            <summary>
            The type of keyboard event.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.Modifiers">
            <summary>
            Bit flags describing any pressed modifier keys. See
            cef_event_flags_t for values.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.WindowsKeyCode">
            <summary>
            The Windows key code for the key event. This value is used by the DOM
            specification. Sometimes it comes directly from the event (i.e. on
            Windows) and sometimes it's determined using a mapping function. See
            WebCore/platform/chromium/KeyboardCodes.h for the list of values.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.NativeKeyCode">
            <summary>
            The actual key code genenerated by the platform.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.IsSystemKey">
            <summary>
            Indicates whether the event is considered a "system key" event (see
            http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for details).
            This value will always be false on non-Windows platforms.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.Character">
            <summary>
            The character generated by the keystroke.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.UnmodifiedCharacter">
            <summary>
            Same as |character| but unmodified by any concurrently-held modifiers
            (except shift). This is useful for working out shortcut keys.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefKeyEvent.FocusOnEditableField">
            <summary>
            True if the focus is currently on an editable field on the page. This is
            useful for determining if standard key events should be intercepted.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefSettings">
            <summary>
            Initialization settings. Specify <c>null</c> or 0 to get the recommended default
            values. Many of these and other settings can also configured using command-line
            switches.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.SingleProcess">
            <summary>
            Set to <c>true</c> to use a single process for the browser and renderer. This
            run mode is not officially supported by Chromium and is less stable than
            the multi-process default. Also configurable using the "single-process"
            command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.BrowserSubprocessPath">
            <summary>
            The path to a separate executable that will be launched for sub-processes.
            By default the browser process executable is used. See the comments on
            CefExecuteProcess() for details. Also configurable using the
            "browser-subprocess-path" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.MultiThreadedMessageLoop">
            <summary>
            Set to <c>true</c> to have the browser process message loop run in a separate
            thread. If <c>false</c> than the CefDoMessageLoopWork() function must be
            called from your application message loop.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.CommandLineArgsDisabled">
            <summary>
            Set to <c>true</c> to disable configuration of browser process features using
            standard CEF and Chromium command-line arguments. Configuration can still
            be specified using CEF data structures or via the
            CefApp::OnBeforeCommandLineProcessing() method.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.CachePath">
            <summary>
            The location where cache data will be stored on disk. If empty an in-memory
            cache will be used for some features and a temporary disk cache for others.
            HTML5 databases such as localStorage will only persist across sessions if a
            cache path is specified.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.PersistSessionCookies">
            <summary>
            To persist session cookies (cookies without an expiry date or validity
            interval) by default when using the global cookie manager set this value to
            true. Session cookies are generally intended to be transient and most Web
            browsers do not persist them. A |cache_path| value must also be specified to
            enable this feature. Also configurable using the "persist-session-cookies"
            command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.UserAgent">
            <summary>
            Value that will be returned as the User-Agent HTTP header. If empty the
            default User-Agent string will be used. Also configurable using the
            "user-agent" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.ProductVersion">
            <summary>
            Value that will be inserted as the product portion of the default
            User-Agent string. If empty the Chromium product version will be used. If
            |userAgent| is specified this value will be ignored. Also configurable
            using the "product-version" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.Locale">
            <summary>
            The locale string that will be passed to WebKit. If empty the default
            locale of "en-US" will be used. This value is ignored on Linux where locale
            is determined using environment variable parsing with the precedence order:
            LANGUAGE, LC_ALL, LC_MESSAGES and LANG. Also configurable using the "lang"
            command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.LogFile">
            <summary>
            The directory and file name to use for the debug log. If empty, the
            default name of "debug.log" will be used and the file will be written
            to the application directory. Also configurable using the "log-file"
            command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.LogSeverity">
            <summary>
            The log severity. Only messages of this severity level or higher will be
            logged. Also configurable using the "log-severity" command-line switch with
            a value of "verbose", "info", "warning", "error", "error-report" or
            "disable".
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.ReleaseDCheckEnabled">
            <summary>
            Enable DCHECK in release mode to ease debugging.  Also configurable using the
            "enable-release-dcheck" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.JavaScriptFlags">
            <summary>
            Custom flags that will be used when initializing the V8 JavaScript engine.
            The consequences of using custom flags may not be well tested. Also
            configurable using the "js-flags" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.ResourcesDirPath">
            <summary>
            The fully qualified path for the resources directory. If this value is
            empty the cef.pak and/or devtools_resources.pak files must be located in
            the module directory on Windows/Linux or the app bundle Resources directory
            on Mac OS X. Also configurable using the "resources-dir-path" command-line
            switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.LocalesDirPath">
            <summary>
            The fully qualified path for the locales directory. If this value is empty
            the locales directory must be located in the module directory. This value
            is ignored on Mac OS X where pack files are always loaded from the app
            bundle resource directory. Also configurable using the "locales-dir-path"
            command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.PackLoadingDisabled">
            <summary>
            Set to <c>true</c> to disable loading of pack files for resources and locales.
            A resource bundle handler must be provided for the browser and render
            processes via CefApp::GetResourceBundleHandler() if loading of pack files
            is disabled. Also configurable using the "disable-pack-loading" command-
            line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.RemoteDebuggingPort">
            <summary>
            Set to a value between 1024 and 65535 to enable remote debugging on the
            specified port. For example, if 8080 is specified the remote debugging URL
            will be http://localhost:8080. CEF can be remotely debugged from any CEF or
            Chrome browser window. Also configurable using the "remote-debugging-port"
            command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.UncaughtExceptionStackSize">
            <summary>
            The number of stack trace frames to capture for uncaught exceptions.
            Specify a positive value to enable the CefV8ContextHandler::
            OnUncaughtException() callback. Specify 0 (default value) and
            OnUncaughtException() will not be called. Also configurable using the
            "uncaught-exception-stack-size" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.ContextSafetyImplementation">
             <summary>
             By default CEF V8 references will be invalidated (the IsValid() method will
             return false) after the owning context has been released. This reduces the
             need for external record keeping and avoids crashes due to the use of V8
             references after the associated context has been released.
            
             CEF currently offers two context safety implementations with different
             performance characteristics. The default implementation (value of 0) uses a
             map of hash values and should provide better performance in situations with
             a small number contexts. The alternate implementation (value of 1) uses a
             hidden value attached to each context and should provide better performance
             in situations with a large number of contexts.
            
             If you need better performance in the creation of V8 references and you
             plan to manually track context lifespan you can disable context safety by
             specifying a value of -1.
            
             Also configurable using the "context-safety-implementation" command-line
             switch.
             </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.IgnoreCertificateErrors">
            <summary>
            Set to true (1) to ignore errors related to invalid SSL certificates.
            Enabling this setting can lead to potential security vulnerabilities like
            "man in the middle" attacks. Applications that load content from the
            internet should not enable this setting. Also configurable using the
            "ignore-certificate-errors" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefSettings.BackgroundColor">
            <summary>
            Used on Mac OS X to specify the background color for hardware accelerated
            content.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefBrowserSettings">
            <summary>
            Browser initialization settings. Specify <c>null</c> or 0 to get the recommended
            default values. The consequences of using custom values may not be well
            tested. Many of these and other settings can also configured using command-
            line switches.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.DefaultEncoding">
            <summary>
            Default encoding for Web content. If empty "ISO-8859-1" will be used. Also
            configurable using the "default-encoding" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.UserStyleSheetLocation">
            <summary>
            Location of the user style sheet that will be used for all pages. This must
            be a data URL of the form "data:text/css;charset=utf-8;base64,csscontent"
            where "csscontent" is the base64 encoded contents of the CSS file. Also
            configurable using the "user-style-sheet-location" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.RemoteFonts">
            <summary>
            Controls the loading of fonts from remote sources. Also configurable using
            the "disable-remote-fonts" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.JavaScript">
            <summary>
            Controls whether JavaScript can be executed. Also configurable using the
            "disable-javascript" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.JavaScriptOpenWindows">
            <summary>
            Controls whether JavaScript can be used for opening windows. Also
            configurable using the "disable-javascript-open-windows" command-line
            switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.JavaScriptCloseWindows">
            <summary>
            Controls whether JavaScript can be used to close windows that were not
            opened via JavaScript. JavaScript can still be used to close windows that
            were opened via JavaScript. Also configurable using the
            "disable-javascript-close-windows" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.JavaScriptAccessClipboard">
            <summary>
            Controls whether JavaScript can access the clipboard. Also configurable
            using the "disable-javascript-access-clipboard" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.JavaScriptDomPaste">
            <summary>
            Controls whether DOM pasting is supported in the editor via
            execCommand("paste"). The |javascript_access_clipboard| setting must also
            be enabled. Also configurable using the "disable-javascript-dom-paste"
            command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.CaretBrowsing">
            <summary>
            Controls whether the caret position will be drawn. Also configurable using
            the "enable-caret-browsing" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.Java">
            <summary>
            Controls whether the Java plugin will be loaded. Also configurable using
            the "disable-java" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.Plugins">
            <summary>
            Controls whether any plugins will be loaded. Also configurable using the
            "disable-plugins" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.UniversalAccessFromFileUrls">
            <summary>
            Controls whether file URLs will have access to all URLs. Also configurable
            using the "allow-universal-access-from-files" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.FileAccessFromFileUrls">
            <summary>
            Controls whether file URLs will have access to other file URLs. Also
            configurable using the "allow-access-from-files" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.WebSecurity">
            <summary>
            Controls whether web security restrictions (same-origin policy) will be
            enforced. Disabling this setting is not recommend as it will allow risky
            security behavior such as cross-site scripting (XSS). Also configurable
            using the "disable-web-security" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.ImageLoading">
            <summary>
            Controls whether image URLs will be loaded from the network. A cached image
            will still be rendered if requested. Also configurable using the
            "disable-image-loading" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.ImageShrinkStandaloneToFit">
            <summary>
            Controls whether standalone images will be shrunk to fit the page. Also
            configurable using the "image-shrink-standalone-to-fit" command-line
            switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.TextAreaResize">
            <summary>
            Controls whether text areas can be resized. Also configurable using the
            "disable-text-area-resize" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.TabToLinks">
            <summary>
            Controls whether the tab key can advance focus to links. Also configurable
            using the "disable-tab-to-links" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.AuthorAndUserStyles">
            <summary>
            Controls whether style sheets can be used. Also configurable using the
            "disable-author-and-user-styles" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.LocalStorage">
            <summary>
            Controls whether local storage can be used. Also configurable using the
            "disable-local-storage" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.Databases">
            <summary>
            Controls whether databases can be used. Also configurable using the
            "disable-databases" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.ApplicationCache">
            <summary>
            Controls whether the application cache can be used. Also configurable using
            the "disable-application-cache" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.WebGL">
            <summary>
            Controls whether WebGL can be used. Note that WebGL requires hardware
            support and may not work on all systems even when enabled. Also
            configurable using the "disable-webgl" command-line switch.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefBrowserSettings.AcceleratedCompositing">
            <summary>
            Controls whether content that depends on accelerated compositing can be
            used. Note that accelerated compositing requires hardware support and may
            not work on all systems even when enabled. Also configurable using the
            "disable-accelerated-compositing" command-line switch.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefMouseEvent">
            <summary>
            Structure representing mouse event information.
            </summary>
        </member>
        <member name="T:Xilium.CefGlue.CefScreenInfo">
            <summary>
            Screen information used when window rendering is disabled. This structure is
            passed as a parameter to CefRenderHandler::GetScreenInfo and should be filled
            in by the client.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefScreenInfo.DeviceScaleFactor">
            <summary>
            Device scale factor. Specifies the ratio between physical and logical
            pixels.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefScreenInfo.Depth">
            <summary>
            The screen depth in bits per pixel.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefScreenInfo.DepthPerComponent">
            <summary>
            The bits per color component. This assumes that the colors are balanced
            equally.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefScreenInfo.IsMonochrome">
            <summary>
            This can be true for black and white printers.
            </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefScreenInfo.Rectangle">
             <summary>
             This is set from the rcMonitor member of MONITORINFOEX, to whit:
               "A RECT structure that specifies the display monitor rectangle,
               expressed in virtual-screen coordinates. Note that if the monitor
               is not the primary display monitor, some of the rectangle's
               coordinates may be negative values."
            
             The |rect| and |available_rect| properties are used to determine the
             available surface for rendering popup views.
             </summary>
        </member>
        <member name="P:Xilium.CefGlue.CefScreenInfo.AvailableRectangle">
             <summary>
             This is set from the rcWork member of MONITORINFOEX, to whit:
               "A RECT structure that specifies the work area rectangle of the
               display monitor that can be used by applications, expressed in
               virtual-screen coordinates. Windows uses this rectangle to
               maximize an application on the monitor. The rest of the area in
               rcMonitor contains system windows such as the task bar and side
               bars. Note that if the monitor is not the primary display monitor,
               some of the rectangle's coordinates may be negative values".
            
             The |rect| and |available_rect| properties are used to determine the
             available surface for rendering popup views.
             </summary>
        </member>
        <member name="T:Xilium.CefGlue.Interop.cef_string_userfree">
            <summary>
            It is sometimes necessary for the system to allocate string structures with
            the expectation that the user will free them. The userfree types act as a
            hint that the user is responsible for freeing the structure.
            </summary>
            <remarks>
            <c>cef_string_userfree*</c> === <c>cef_string_userfree_t</c>.
            </remarks>
        </member>
    </members>
</doc>
